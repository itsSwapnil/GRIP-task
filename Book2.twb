<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.30000001192092896' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
        <calculation class='tableau' formula='&quot;Total Cases&quot;' />
        <members>
          <member value='&quot;Total Cases&quot;' />
          <member value='&quot;Total Deaths&quot;' />
        </members>
      </column>
      <column caption='Parameter 2' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='grip_covid19' inline='true' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='grip_covid19' name='textscan.0o73g3j0psc5031aqi63q1987d5g'>
            <connection class='textscan' directory='C:/Users/Swapnil/OneDrive/Desktop/Machine Learning/GRIP_projects' filename='grip_covid19.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o73g3j0psc5031aqi63q1987d5g' name='grip_covid19.csv' table='[grip_covid19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='real' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population' ordinal='48' />
            <column datatype='real' name='population_density' ordinal='49' />
            <column datatype='real' name='median_age' ordinal='50' />
            <column datatype='real' name='aged_65_older' ordinal='51' />
            <column datatype='real' name='aged_70_older' ordinal='52' />
            <column datatype='real' name='gdp_per_capita' ordinal='53' />
            <column datatype='real' name='extreme_poverty' ordinal='54' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
            <column datatype='real' name='diabetes_prevalence' ordinal='56' />
            <column datatype='real' name='female_smokers' ordinal='57' />
            <column datatype='real' name='male_smokers' ordinal='58' />
            <column datatype='real' name='handwashing_facilities' ordinal='59' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
            <column datatype='real' name='life_expectancy' ordinal='61' />
            <column datatype='real' name='human_development_index' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o73g3j0psc5031aqi63q1987d5g' name='grip_covid19.csv' table='[grip_covid19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='real' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population' ordinal='48' />
            <column datatype='real' name='population_density' ordinal='49' />
            <column datatype='real' name='median_age' ordinal='50' />
            <column datatype='real' name='aged_65_older' ordinal='51' />
            <column datatype='real' name='aged_70_older' ordinal='52' />
            <column datatype='real' name='gdp_per_capita' ordinal='53' />
            <column datatype='real' name='extreme_poverty' ordinal='54' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
            <column datatype='real' name='diabetes_prevalence' ordinal='56' />
            <column datatype='real' name='female_smokers' ordinal='57' />
            <column datatype='real' name='male_smokers' ordinal='58' />
            <column datatype='real' name='handwashing_facilities' ordinal='59' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
            <column datatype='real' name='life_expectancy' ordinal='61' />
            <column datatype='real' name='human_development_index' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[grip_covid19.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(AVG([total_cases]))'>
          <table-calc ordering-field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='2inone' datatype='real' name='[Calculation_801640750465552384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Total Cases&quot; then [total_cases]&#13;&#10;when &quot;Total Deaths&quot; then [total_deaths]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='grip_covid19.csv' datatype='table' name='[__tableau_internal_object_id__].[grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
          <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
          <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
        </semantic-values>
      </column>
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='real' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[new_cases]' derivation='Avg' name='[avg:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Avg' name='[avg:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Avg' name='[avg:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date),Location)' hidden='true' name='[Action (MONTH(Date),Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11</bucket>
            </map>
            <map to='#d37295'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2022</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2021</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>9</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:date:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2021</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11</bucket>
            </map>
            <map to='#d37295'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2022</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2021</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>9</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2021</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
          <calculation class='tableau' formula='&quot;Total Cases&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='grip_covid19.csv' id='grip_covid19.csv_4A9EAD19F0C34F96ACB718BF92F6C8F8'>
            <properties context=''>
              <relation connection='textscan.0o73g3j0psc5031aqi63q1987d5g' name='grip_covid19.csv' table='[grip_covid19#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='total_tests' ordinal='25' />
                  <column datatype='real' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='string' name='total_boosters' ordinal='37' />
                  <column datatype='real' name='new_vaccinations' ordinal='38' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='real' name='population' ordinal='48' />
                  <column datatype='real' name='population_density' ordinal='49' />
                  <column datatype='real' name='median_age' ordinal='50' />
                  <column datatype='real' name='aged_65_older' ordinal='51' />
                  <column datatype='real' name='aged_70_older' ordinal='52' />
                  <column datatype='real' name='gdp_per_capita' ordinal='53' />
                  <column datatype='real' name='extreme_poverty' ordinal='54' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='56' />
                  <column datatype='real' name='female_smokers' ordinal='57' />
                  <column datatype='real' name='male_smokers' ordinal='58' />
                  <column datatype='real' name='handwashing_facilities' ordinal='59' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
                  <column datatype='real' name='life_expectancy' ordinal='61' />
                  <column datatype='real' name='human_development_index' ordinal='62' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='real' name='excess_mortality' ordinal='65' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_62FB685EB80E46F0A58FBECF766ABBCD]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Trend yearly' />
      <command command='tsc:brush'>
        <param name='field-captions' value='YEAR(Date)' />
        <param name='target' value='Trend yearly' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_278E0235F81042B79C2457CE8D38E767]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Total Cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_663AE3B8CE484FCA8029C8077894CBA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Trend yearly' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_6B09BD61F2A74EB4812CDF41EC7258B7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Total vaccinations' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Top cases vs deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action7_7C0D66D291374F9CA7B302D75727215A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7_CEDD1E55D39B4583BB060EAE074C6015]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='GDP' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action8_3FF17202CDEF45BD8F59E93815D5BF7C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='World map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Asia cases vs deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Asian Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
              <calculation class='tableau' formula='&quot;Total Cases&quot;' />
            </column>
            <column caption='Parameter 2' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='2inone' datatype='real' name='[Calculation_801640750465552384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Total Cases&quot; then [total_cases]&#13;&#10;when &quot;Total Deaths&quot; then [total_deaths]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_801640750465552384]' derivation='Avg' name='[avg:Calculation_801640750465552384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_801640750465552384])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_801640750465552384])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Brunei&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Macao&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Northern Cyprus&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Palestine&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Syria&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Timor&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Yemen&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:Calculation_801640750465552384:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' />
              <lod column='[Parameters].[Parameter 2]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Cases:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#b07aa1'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Deaths:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:Calculation_801640750465552384:qk]</cols>
      </table>
      <simple-id uuid='{DBFB8B7D-C820-4FA5-A4B2-7A019EB18B6E}' />
    </worksheet>
    <worksheet name='Asia map'>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Avg' name='[cum:avg:total_cases:qk:3]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[date]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]' field-type='quantitative' max='15743754.039768666' min='1352552.8215912138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]' field-type='quantitative' max='6697474.3153192773' min='-1046219.2483080738' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[cum:avg:total_cases:qk:3]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='color' center='30000000.0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' />
              <lod column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' />
              <size column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[cum:avg:total_cases:qk:3]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>&#10;Month of Date:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]>]]></run>
                <run>&#10;Total Cases:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#59a14f'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]>]]></run>
                <run>&#10;Total Deaths</run>
                <run fontcolor='#787878'>:  </run>
                <run bold='true' fontcolor='#aa0000'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.3922650814056396' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B75DF16B-F208-4EDF-BDAD-3F9BDDD5BF04}' />
    </worksheet>
    <worksheet name='Cardio'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Health issues in </run>
            <run bold='true'>Æ </run>
            <run><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
              <bucket>&quot;[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action7_CEDD1E55D39B4583BB060EAE074C6015]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' value='146' />
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' value='75' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' value='-90' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='576' />
                <format attr='maxheight' value='576' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='576' />
                <format attr='maxheight' value='576' />
                <format attr='minwidth' value='3440' />
                <format attr='maxwidth' value='3440' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='576' />
                <format attr='maxheight' value='576' />
                <format attr='minwidth' value='3440' />
                <format attr='maxwidth' value='3440' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:cardiovasc_death_rate:qk] + [federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:diabetes_prevalence:qk])</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6F838F33-9311-4BD1-A2CD-79BE74CFFD2B}' />
    </worksheet>
    <worksheet name='GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; &lt;</run>
            <run>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='734' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' />
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' />
              <text column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0B4361AE-B0E4-4123-9F69-C2C884127E3B}' />
    </worksheet>
    <worksheet name='Human development'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hospital facilities in</run>
            <run bold='true'>Æ </run>
            <run><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action7_CEDD1E55D39B4583BB060EAE074C6015]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:hospital_beds_per_thousand:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:hospital_beds_per_thousand:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:hospital_beds_per_thousand:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' value='146' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Hospital Beds Per Thousand:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:hospital_beds_per_thousand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Human Development Index:&#9;</run>
                <run bold='true' fontcolor='#59a14f'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='576' />
                <format attr='maxheight' value='576' />
                <format attr='minwidth' value='3440' />
                <format attr='maxwidth' value='3440' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:hospital_beds_per_thousand:qk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{AD2AA17E-18C1-4CBC-A8D0-3B7D2601F7D3}' />
    </worksheet>
    <worksheet name='New cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; IN &lt;</run>
            <run>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column-instance column='[new_cases]' derivation='Avg' name='[avg:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>New Cases:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:new_cases:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:new_cases:qk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{1F42DD12-01C8-419A-8367-FA0061E4B2E7}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:population_density:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{924340F4-50B2-411B-84E3-3631D28A984E}' />
    </worksheet>
    <worksheet name='Top cases vs deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Top Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
              <calculation class='tableau' formula='&quot;Total Cases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='2inone' datatype='real' name='[Calculation_801640750465552384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Total Cases&quot; then [total_cases]&#13;&#10;when &quot;Total Deaths&quot; then [total_deaths]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_801640750465552384]' derivation='Avg' name='[avg:Calculation_801640750465552384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([new_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:Calculation_801640750465552384:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:Calculation_801640750465552384:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Cases:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run fontcolor='#b07aa1'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Deaths:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:Calculation_801640750465552384:qk]</cols>
      </table>
      <simple-id uuid='{9F6D5B5A-8DA7-4D62-BD57-1E5B8377DE19}' />
    </worksheet>
    <worksheet name='Total Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#de0000' />
            <format attr='height' value='73' />
            <format attr='width' value='297' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_cases:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#aa007f' fontsize='15'>Total Cases</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#aa007f' fontsize='15'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_cases:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.2193922996520996' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61C115E5-85CB-460F-A2EC-8B83211D4AB8}' />
    </worksheet>
    <worksheet name='Total vaccinations'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column-instance column='[total_vaccinations]' derivation='Avg' name='[avg:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='280' />
            <format attr='height' value='71' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]' />
              <text column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'>Total Vaccinations</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500' fontsize='15'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0333715F-7510-4AB9-B1A8-EEE767B3DC1D}' />
    </worksheet>
    <worksheet name='Trend IUC'>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
              <calculation class='tableau' formula='&quot;Total Cases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='2inone' datatype='real' name='[Calculation_801640750465552384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Total Cases&quot; then [total_cases]&#13;&#10;when &quot;Total Deaths&quot; then [total_deaths]&#13;&#10;END' />
            </column>
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_801640750465552384]' derivation='Sum' name='[sum:Calculation_801640750465552384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2020-12-31#</max>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Month of Date:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths: </run>
                <run fontcolor='#aa0000'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='size' value='2.5524861812591553' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:qk]</cols>
        <pages>
          <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' start='83' />
      </table>
      <simple-id uuid='{7C2C74CE-A043-4801-874C-F56F6888FDED}' />
    </worksheet>
    <worksheet name='Trend yearly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Trend &lt;</run>
            <run bold='true'>[Parameters].[Parameter 1]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
              <calculation class='tableau' formula='&quot;Total Cases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column caption='2inone' datatype='real' name='[Calculation_801640750465552384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Total Cases&quot; then [total_cases]&#13;&#10;when &quot;Total Deaths&quot; then [total_deaths]&#13;&#10;END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_801640750465552384]' derivation='None' name='[none:Calculation_801640750465552384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_801640750465552384]' derivation='Sum' name='[sum:Calculation_801640750465552384:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:Calculation_801640750465552384:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>20221639.0</max>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:Calculation_801640750465552384:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[mn:date:ok]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#aa007f' fontsize='12'>Month of Date:&#9;</run>
                <run bold='true' fontcolor='#aa007f' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[mn:date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>2inone:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:Calculation_801640750465552384:qk]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{44ABFC1C-DE3B-4454-90FE-6F4F4A22D5AA}' />
    </worksheet>
    <worksheet name='Vaccinated Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; IN &lt;</run>
            <run>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column-instance column='[people_vaccinated]' derivation='Avg' name='[avg:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action7_CEDD1E55D39B4583BB060EAE074C6015]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:people_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:population:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:people_vaccinated:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:population:qk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' value='139' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='22' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='12'><![CDATA[Avg. Population:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500' fontsize='12'><![CDATA[Avg. People Vaccinated:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='12'><![CDATA[Avg. Population:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500' fontsize='12'><![CDATA[Avg. People Vaccinated:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='12'>Location:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='12'><![CDATA[Avg. Population:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#005500' fontsize='12'><![CDATA[Avg. People Vaccinated:	<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk] + [federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:people_vaccinated:qk])</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{782A7B39-178D-46AC-AE1E-62481C70C60C}' />
    </worksheet>
    <worksheet name='World map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Avg' name='[cum:avg:total_cases:qk:3]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[date]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]'>
            <groupfilter from='2020' function='range' level='[yr:date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]' field-type='quantitative' max='19339909.053406373' min='-14512992.418654865' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]' field-type='quantitative' max='15631939.546535119' min='-15090299.947940134' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[cum:avg:total_cases:qk:3]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='color' center='30000000.0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' />
              <lod column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' />
              <size column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[cum:avg:total_cases:qk:3]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>&#10;Month of Date:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]>]]></run>
                <run>&#10;Total Cases:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#59a14f'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]>]]></run>
                <run>&#10;Total Deaths</run>
                <run fontcolor='#787878'>:  </run>
                <run bold='true' fontcolor='#aa0000'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' />
      </table>
      <simple-id uuid='{4C58482B-3597-40FD-A29B-17CE2EF448C9}' />
    </worksheet>
    <worksheet name='World new cases'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
            <column datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(AVG([total_cases]))'>
                <table-calc ordering-field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='7.4256000000000002' />
                <semantic-value key='&quot;Timor&quot;' value='8.8742000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='150.55080000000001' />
                <semantic-value key='&quot;Timor&quot;' value='125.72750000000001' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_41D3623B3C2D4BC09EB6B6E641F23399]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_663AE3B8CE484FCA8029C8077894CBA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Action (Location)]</column>
            <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]' field-type='quantitative' max='19339909.053406373' min='-14512992.418654865' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]' field-type='quantitative' max='15631939.546535119' min='-15090299.947940134' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[usr:Calculation1:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' />
              <size column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[usr:Calculation1:qk]' />
              <lod column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]' />
              <tooltip column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_deaths:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='12'>Location:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]>]]></run>
                <run>&#10;Month of Date:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]>]]></run>
                <run>&#10;New Cases:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_cases:qk]>]]></run>
                <run>&#10;new Deaths</run>
                <run fontcolor='#787878'>:    </run>
                <run bold='true'><![CDATA[<[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:new_deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Latitude (generated)]</rows>
        <cols>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{74BA014A-A9D4-45ED-8AE0-FC6E4DC934C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Total Cases/Total Deaths' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Cases&quot;'>
          <calculation class='tableau' formula='&quot;Total Cases&quot;' />
          <members>
            <member value='&quot;Total Cases&quot;' />
            <member value='&quot;Total Deaths&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='46' param='horz' type-v2='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='5' type-v2='layout-basic' w='99034' x='483' y='878'>
              <zone h='83535' id='3' name='World map' w='49514' x='483' y='15587'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44362' id='21' name='Trend yearly' w='49520' x='49997' y='54760'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53882' id='24' name='Top cases vs deaths' w='24758' x='49997' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14709' id='36' name='Total Cases' w='24754' x='483' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14709' id='37' name='Total vaccinations' w='24760' x='25237' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53882' id='44' name='Asia cases vs deaths' w='24762' x='74755' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone friendly-name='Month of Date' h='13063' id='9' name='World map' synchronized='1' type-v2='currpage' w='10036' x='34620' y='22942' />
        <zone h='3403' id='23' leg-item-layout='horz' name='Trend yearly' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]' show-title='false' type-v2='color' w='22803' x='64608' y='56641' />
        <zone h='5269' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10984' x='88594' y='39627' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98244' id='71' param='vert' type-v2='layout-flow' w='99034' x='483' y='878'>
                <zone fixed-size='110' h='14709' id='36' is-fixed='true' name='Total Cases' w='24754' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='14709' id='37' is-fixed='true' name='Total vaccinations' w='24760' x='25237' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53882' id='24' is-fixed='true' name='Top cases vs deaths' w='24758' x='49997' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53882' id='44' is-fixed='true' name='Asia cases vs deaths' w='24762' x='74755' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83535' id='3' is-fixed='true' name='World map' w='49514' x='483' y='15587'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5269' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10984' x='88594' y='39627'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44362' id='21' is-fixed='true' name='Trend yearly' w='49520' x='49997' y='54760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3403' id='23' leg-item-layout='horz' name='Trend yearly' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]' show-title='false' type-v2='color' w='22803' x='64608' y='56641'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Month of Date' h='13063' id='9' name='World map' synchronized='1' type-v2='currpage' w='10036' x='34620' y='22942'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F18C3D18-1438-46E4-8E8B-CC9085623236}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='grip_covid19' name='federated.1lgg1pa1ogjdjo10flweu0wwgol6' />
      </datasources>
      <datasource-dependencies datasource='federated.1lgg1pa1ogjdjo10flweu0wwgol6'>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='5' type-v2='layout-basic' w='99034' x='483' y='878'>
              <zone h='49122' id='3' name='Human development' w='49513' x='483' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49122' id='9' name='Cardio' w='49517' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49122' id='12' name='Vaccinated Population' w='49521' x='49996' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49122' id='15' name='GDP' w='49517' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6696' id='8' name='Human development' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]' type-v2='color' w='12425' x='31873' y='8782' />
        <zone h='5598' id='16' name='GDP' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' type-v2='color' w='19508' x='25450' y='50604' />
        <zone h='7245' id='11' name='Cardio' pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' type-v2='color' w='12845' x='85714' y='50384' />
        <zone h='18112' id='10' mode='radiolist' name='Cardio' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' show-all='false' type-v2='filter' w='10078' x='89137' y='9550' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98244' id='35' param='vert' type-v2='layout-flow' w='99034' x='483' y='878'>
                <zone fixed-size='280' h='49122' id='3' is-fixed='true' name='Human development' w='49513' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6696' id='8' name='Human development' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]' type-v2='color' w='12425' x='31873' y='8782'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49122' id='12' is-fixed='true' name='Vaccinated Population' w='49521' x='49996' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49122' id='15' is-fixed='true' name='GDP' w='49517' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5598' id='16' name='GDP' pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' type-v2='color' w='19508' x='25450' y='50604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18112' id='10' mode='dropdown' name='Cardio' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' show-all='false' type-v2='filter' w='10078' x='89137' y='9550'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49122' id='9' is-fixed='true' name='Cardio' w='49517' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7245' id='11' name='Cardio' pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' type-v2='color' w='12845' x='85714' y='50384'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C69B2C6-DB55-4E6E-94C8-D4A002E147C6}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='162' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='878'>
            <zone h='11087' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='878' />
            <zone h='87157' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='11965'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Total covid Cases/Deaths' captured-sheet='Dashboard 2' id='1'>
                    <capturedDeltas>
                      <worksheet name='Total Cases'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Total vaccinations'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]</field>
                                  <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>68686604.573561788</value>
                                <value>3712030170969.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Other factors that affect spreding covid' captured-sheet='Dashboard 3' id='2'>
                    <currentDeltas>
                      <worksheet name='Cardio'>
                        <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
                          <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='GDP'>
                        <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
                          <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Human development'>
                        <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
                          <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Vaccinated Population'>
                        <filter class='categorical' column='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]'>
                          <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{30D6D865-0904-4D31-953B-482F510DFD24}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{684A3917-F9B4-4723-93CF-BD72C30B8909}' />
    </window>
    <window class='worksheet' name='Total vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64407CC0-2A12-47D1-A50E-CF451DCE57F4}' />
    </window>
    <window class='worksheet' name='Trend IUC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-12-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:icu_patients:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3B8EBBD-2195-41CF-BDCB-0DEBE1CE82FA}' />
    </window>
    <window class='worksheet' name='Top cases vs deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0069984-6E35-4A2F-8EC9-D1B8979593D7}' />
    </window>
    <window class='worksheet' name='Asia cases vs deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_deaths:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F5CFD78-746D-4F19-843C-98ACE28AE4CC}' />
    </window>
    <window class='worksheet' maximized='true' name='World map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-10-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{430B9AD0-1777-4633-98E9-BF7BC41BB7CD}' />
    </window>
    <window class='worksheet' name='Asia map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-10-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B997762-A43C-469E-B22F-F7E9C0FDCD06}' />
    </window>
    <window class='worksheet' name='Trend yearly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:Calculation_801640750465552384:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[qr:Calculation_511440051379040256:ok]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:Calculation_511440051379040256:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCAC533B-2897-48A6-BDA2-2C9BC8E0A414}' />
    </window>
    <window class='worksheet' name='Human development'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:hosp_patients:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:icu_patients:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B01A109-A451-450E-9D04-D453C1DD2486}' />
    </window>
    <window class='worksheet' name='Cardio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:hosp_patients:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:icu_patients:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:human_development_index:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35A112D3-55CA-40B3-BE7A-83C574E97C9B}' />
    </window>
    <window class='worksheet' name='Vaccinated Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FDE7250-DA9C-41A8-AB07-64739968D34A}' />
    </window>
    <window class='worksheet' name='New cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:population:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE7E2B7C-BE14-4E40-9DE1-7FDE9A66DBA1}' />
    </window>
    <window class='worksheet' name='World new cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-10-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_cases:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:date:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC8F002C-D634-468A-86B0-465523031E1A}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:new_deaths:qk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:continent:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C33C6F9C-7E59-4610-9E5F-3EA2BC28CE9D}' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:gdp_per_capita:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75E40433-49FA-4020-A218-C69DD1EBBF6D}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Asia cases vs deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top cases vs deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]</field>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_cases:qk]</field>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>68686604.573561788</value>
                  <value>213782233054.0</value>
                  <value>3712030170969.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Total vaccinations'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]</field>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_cases:qk]</field>
                    <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[sum:total_vaccinations:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>68686604.573561788</value>
                  <value>213782233054.0</value>
                  <value>3712030170969.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[avg:total_vaccinations:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trend yearly'>
          <zoom type='entire-view' />
          <highlight field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[yr:date:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='World map'>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{5CC6692F-D07D-46CA-B264-2D5D0FFDF933}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Cardio'>
          <zoom type='entire-view' />
          <highlight field='[federated.1lgg1pa1ogjdjo10flweu0wwgol6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GDP' />
        <viewpoint name='Human development'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccinated Population'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{F9165A80-9847-4149-BE0A-34597CC1F504}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{8D2FD8FD-4D4F-4EF7-A147-689DA02C1194}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Asia cases vs deaths' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Asia map' width='192'>
      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
      2yR6/Dz8PxPFn6bOTkQfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cardio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      g+f/D6lzpxO5GRHDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Human development' width='192'>
      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
      12i2Vf4/ddTvTx0B3+wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top cases vs deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='77' name='Total Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABNCAYAAADw8msBAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAR+0lEQVR4nO2deVQUV7rAf3bbCo1sIogCgiiiICJBRVxHXKJO4m40R32ZiTk652lGiYmZ
      jMmJcxJ9mSyjOU+TmBfjJJEkRqMxOu5LRAMuICEtCgIqsoPIvtmL749qoGkaaLpR0arfX3Wq
      7q17697vu3t9X6f79+/fR0JCpMgedQYkJB4lkgJIiBpJASREjaQAEqJGUgAJUSMpgISokRRA
      QtRICiAhaiQFkBA1kgJIiBpJASREjaQAEqJGUgAJUSMpgISokRRAQtRICiAhaiQFkLCKss2f
      sLvTenaPiqbsUWfGAjo/6gw88Rz+kd3TVW2Ls2wB87cNejD56UBobyST8vF5bu/LpjxTDYDc
      yxGH0UH4/m0kPsHdHngLLSnAk0y98rkRmPrfBPR/1Bmqo4o7G78lel0WWqMn2sxSir8/R/z3
      pXS5PxfPB5wTSQEeNNPmMv/+XKOb1zjfaReZgOOmlUxZ3eNR5OyRkbXyUy5sLUeHHNt5owj5
      xyjcA2yRA9qSIkr+c47La3QPJS+SAkg8dOL0wu+0/gXGv92HLgbP5E4uuCyayeQFOh6GCkiT
      YImHTC5qgPDxhBkJfyM6yx6KcEo9wGOBjprEBK69eZ7Mc4XUlgBKG2xG9qff2gn4P+2C3CB0
      1vL1xH5uGL+AJL/1JBneajTR1qHOzCbz62hu7Myj4nY56irhidzLle5LRhL8aijOzu3wKefi
      ATleb43BoU0RNdy7mkbatvPcPlZAVXKVfv4gR9HfnZ4r/sCQlX7YmZBoXWEOtzYf4/o3DZNt
      nJQon/KQFKDjo6F48785HWk0YayqoebUFZJOXePGijlM2hyIjcW1mUJ8H2FOYow2s5DCjQc4
      EXWL8IS5eFqpBKXnbwH+eExuY/ueFsMvgacobZpD1GnZZEVGkbMvgkknx+FoWA5pcZyddJCC
      DKNoJVVUnUqVFKCjc+/nvZyJzEKLnG4rZhH+7iCcnDqjqyih8Iv9XIi8SfXW3UT7uDLpVTdk
      gOe29czfRptWgWQ93XF/eSgDZgfi7GtPFxugppqSw0eIXZxIRYaKuHeC6f2v/lYNTcpT70D4
      kMZCaibyQB98XgrFd6YvDl52KDrTqBxqo08R92UwE5c56mPoyPrgsCD83v6EHpqFt36yrauo
      pCxBJc0BOja5pLx5FTWg+PMcJm4JwslJkBxZNyd6rl7C+A/cACh9+ySZ5RYmo/FnWN5fGLtu
      JD0D9MIPYGOL0+yZDH9FGKyoD92g2KrvuUtFMjDQhW5tjeozhglX/sTw1UG49BWEH+rKYT6D
      5+hTOHUTtUF6ZSqh33RcPRlfvfAL8exwGjtSUoAOTYKKDBWAM/0iA01MGGU4Lh9DLyVQlcLt
      Q7WWpdPihFNGj1HewmVKOdWWpdCYKnWT9f9WaTGPSnqMFRoCbpcZ5NEe2z7CVen2M2Rcr22y
      siQNgTow1QnZ+sr0xDmomUD2vekeDLmxUBSfDQt8LUtMU8HdXedJ+T6FO5fuUpPfZhE1g+50
      GwioBCFVtDV6TRHZn13gxoEUii+XCosBLdIVz6XBqHYlUntFxUV/FXE97bEb3gePGaF4ze8j
      KUBHRl2mb8vCXVtYMemBQxAQC+pSC3uA4mtcDNtDRuqDEPrG2Pv1gM/zKNWAQxukT5d8jtPh
      J7jbqtA3RjF5NlMvuBO/5gw552rQ5ZdTfjCJ5INJJC+TSwrQkVE42AoXsYWUQTNKcIcy/VEj
      hWNXC1KpJeNlvfArXfDYMJmAxX1x6NG1YchhyXmmZnAc6QMkkH1ch9c0c0fguSQ9pxd+bw/6
      b5hK/z/2wt6pQXzLNn/C0cgCk7G7jAgn/Gw41FRTnnSb3CO/k/PddQqT1JICdGRsQzywJYNq
      sihWgaepYVB5DncThUuXUA8LUskgf5/Q8rt9vpRRi5QW59csxoQCcWS+c46AaePM2wu4lU6e
      CsCB/j8sJWSEhVNXG1vsQ/2xD/VnwDodNVHfSZPgDk1IEN5BAMWkb0riXpMAOkq3nSO3ClD6
      02e6UQ/gbo/Qh9SgbnaFSItOv+mlsLcx8VyHulxt4r6l9BLG/rFnuPBhbvOTYY0GrabuWofg
      xKILXRxMiawGTZmpgxPllF6paOZIhQybUA9JATo2vfB/NwAFoN6xl5MrVZSUCFKhqyghf/M3
      nHlN6PYd/zERL3uj6EFe9FAClJG2+hj5mfpVEE0tlbl6qccVh3DhKvejE+Tn6qWuppqSo9HE
      jn2fnxckt+tXDVtmB2gpee0LDs8/SfbV6npF0Jbkkf9/+znuuZ2UW/qbPq44KAHukP5uPKUV
      uvoyKIo6zC+D/8nJt++YSKmW7GUf8lNYFKqoTMrv1K0C6VBn3uDqG5ekIVBHp8uMOYzfVMbp
      yCwqtv7I8a3GIeTYrpjDuNVuTVuzzv4M2tCL7MhcdNExRPeJaXhWfxSiB/3fCiJtuora6Bii
      e8c0eoXML4CQj3XEr2o/JfDctoKxPXYQs7GQ6j1nidlz1kQoN+oHdAbfURt1gGNRBxqFlE8a
      S8iz10h4z1gJZMjt5GhPpJK8OBVTXyD1AB2ezjivfpFnU+bS/xlXujrpbyttsIkYTPCZVUzb
      0twxCBmOq5cyZW8YrkNt6itb1tMeZ3/H+lBdps1mSkwEverDKOg63If+e1cw4+pz+Pq1ecGy
      FZS4b1jBzPSFBP7VB3uvhvfLvRxxXjiG0LjF+NfvXNd9RwjOdWHrv/8VZh6fiFtPU6LcHf/D
      a5kSPZWBCz1QGqQj62mP80sRdJJ8hEmIGakHkBA1kgJIiBpJASREjaQAEqJGUgAJUSMpgISo
      kRRAQtRICiAhaiQFkBA1kgJIiBpJASREjaQAEqJGUgAJUSMpgISoEdEPMRqq4hNJ//Ayt07n
      1Zv9qLN9OWR1CN1dW28PdBWFZL75A/EfF9KtNdPmNWUUHfmNjF0p5P5aQJWRXco+L07Ab0Hv
      Npo0bDCtbh5BhJuws2/KXqa5ZaGrKCT3ixhSv03h7iW9jc4WbJWah4X1Y00Z15SJ438A7Q0V
      l5//mVsXW/i31cmToNgXGTiwmYqvKSLjnZ9Qbc6kWv83YYu2/W/FcjLwKHerTD+uQ+YXTNiF
      2W2wudlGBVAGM7pyNr3rb+io+Xk/J55PrP+OpnHs8f5uOcNmGHlo0VRQsGUfF9elNx8XObYr
      5jFly6DmLT8bYXH9WFPG+rgi6AGucanfj4LAOLni+fZEBtWZ/dDUUhlzgbj/OkVBRhaqqYdw
      TnuGnoalUlNE9r8OkbChpUo3gUaNtkqOYswgBqwJw2uMG3Z6UyPakjzyPjkuvDM1kQuLPej+
      nxGYZ49hECPvr2dkS0GyYznpeZS7gGJ5EO4Gj3QJJzg1M5FqQBYSzLCdU/EMsEWOhntXr/Hb
      4p/ISCgnY+Z2ul5+meCQBoEr2/I1ZyILADm2Tw8jYMMIPANd6GIjfFPWm7uJ21pE9dY9/PrU
      X5nwoiOtY0X9WFPG+rgimQMocFg1l6m5KwhfPRCnOps3nbtiN24cY38YKVhPyEgg43TjmGWf
      7SLGoMWTj3DFzpwk7X0Zmv4Gs87OI2CWF/YGdnbkTu54/H0JEZuEgYnuUAK3b7XDZwpvo+iL
      i9wFwJOANYbGbHXkfHaBSgDvYYy5OLveWCx0pktAECNOzsHDHaCYtM9SmlhUkPn1IzAmkulH
      puEb6lJvR1Tu5I73lqWEzAHQcucrFRVm59nC+rGmjPVxRaAASjz3r2Ly5iBMWv0AZCO8EQYy
      WkpT7poO49ePwDOvMPNCBN3NSbanJ26+LXewyogBCG1kDer2crFYfoVr7wsmbGWLRtC3kamg
      BmOxiucCGvd0dTgH0m+JUFA6VWEjIZYFjifi9yUEhDfnvM7ARmdcoZleI62oH2vKWB9XBEMg
      bzxntBIku0RoFQG7Pk6Nn9m64bNzFkH1E6nsdsuZOjEbwVyPAzY92+edZdv1doJwZsDrQ4zs
      b8qQteX/dkVjg7TdJge2EkFH1W29lAU4m9dTWls/rdBaGYugB2gFTQUZb53RDxm8cQ1rXCQO
      y+cxfFFbV2paR3sllpg1whCj62vj6dceCqBJ4/o/BTtBsunh9GtiSa47vWcLLbT6mzgyTdk6
      L04i/ZsaABxnD2yTGXPtldP8vkmIq5jQB3NmAK3SSv20nJ/Wy1gEPUAL1ORy/fmdJP6kr/AP
      /tg+gtgM2pJyylWp5HwdS/IXhWiRY/unZ5mw0bddWqKqr8+SkQdgg/faYSYn1Q4r5xG4bxtJ
      0Ve5GPYD1d9NpV+oA3I0VMXH8dvzx8nOA9m4CMJWmuu9UkfNiUOcnhknDJncAwh9w0Ir1YZY
      UD9tLWPRKsC9i9GcX3yG/FQtdUt3f3jVhHEpa0mL5pifsWsfOYoxgxn8/lT6Nzuebiu5pG/O
      ECat4aMYML6Zt3Z2I+DkSuxf/ZZLH18lcdhVEhsFUOCwag5jPgw06W+rCZpiMl/9lksfFwr7
      AU6eBJ2eh5eVrpTaVD9WlLH4FEBTQc7bX3F+o77CsMNt22LGLOtlweaNpWjRpuaQczCFHv3N
      24BrDfXhGNJVAHJ6rQlr0eisrriU6ko5MiVojZd2lXJklWVUFuuwayVf2iux/DrnhF5IQRYy
      jPCj0+ltzfe0W/2YV8ai2AirQ1d4nYSnd3EjQV9hfgGEHJmDbysrCY2x3Mm1rqKS2tv55B67
      TPp71yjJ14LSHo8vX2TkAmcreoJSrk/ZROJxIGgUEZen4NLMJ+mSL3J26iEKMqDrrLGEbqhz
      Ui14YUxZd4DknyrBuy9DjyzBz+TGoIbiz6M4u/wmgkcCBd03LGL0Wh+r5krtUT9tLWPRKIBh
      xYMCh7/PZ/w/BlhQYe3k5V1TQeaKTzn/eSXmOLFrCd25gxwcG0ct0H1bpIGTOGNyUQ3ZRrIK
      ZAtm8ez3Q03s1lZxc+FHxO3SQtBYJv0+EWej53lrt/PrB0XoEJaHg/Y+z4DB1g0m2q9+DDCj
      jMWxClR+nbi6wlW64Ht8FZM3WFm41tK5G15bn8FLCVDAjagsC19US+ZnCUJL7P4UgS3tvqal
      kqv3c+HxginhB1DS94UA4VKVQm5a46dlW76pF/6us54m4vclVgv/A6sfM8pYBAqgI/+d/WRk
      ANjhtWcpoZPaa+JpJZ1dsNfLWnWOhS4eVedIitKPll8ejntLQlOtRtPC46ao0Rp6xcu+SPzr
      uULLPy6C8bvDcW5m88p8HnD9tFLGHUIOHijlV0jdKmyjyBY9Tei0B+wBRUiU/J9vUdOKtOkS
      fiMjTrjuEWZ8XtMcdOTtuCRsEin9CXy5V8vB6+3sQ95uUw43AKrI3J0qXCrdcPBpeFL8VSx3
      6jbZtoyzyNdvEyyuH2vKuCHuk68A59PJ1690uD3r33bPhBZRS9F7/+aA62Z+WXeenPgiaioa
      TtVoS4ooitrP8YgY/bmcYPznG3m3SIvmWKf17O60nmObTTl/ALLjuLZNWCPvuiKsqYMMY+wH
      M2itMKJX79jLsfnR5N+sc06h4d7NG1yd/ykXdwjvtFs71uCdd8k/qt858x9E7+a8VjaLjqzl
      77C703oaDUQsrh9ryrgh7hO/DFqRUlB/oCtv4f+we2HL4RtNbE2uLzdQGrmF3ZGGd+rO3stQ
      OCmgpITCjUco3Hik+QS9+zL0yEx6Gwlv8Q8J+nTldHUx7fyuoUX2ZOAqczbTZLisW8royh3E
      flBE9Z5TRO85ZSKc4HQjYp2nwTvvUKZvSUmJ4VSnGBPxDDH6D6H8Crd2Cqpm+DWW1481ZdwQ
      94lXAJ3mwbv+bEp3/A69jvfVNNJ2xpOzr4CqPAO/tq3+rJFL1vf6A23jJhCyxETTXvwbVzYI
      YRTLRhsdemuBzt3o/f4KZryURPLb57lt8BOJ3MsRh9FB+P5tJD7BxuPwBl9ilqA+lqRv6e1w
      Nbhvef1YU8YNcUWzDPpYoTrJoSFnqcSNgGt/IbC5n3QeG2rJWPw+F6O0KP48n1lftnao7uHx
      uJfsE0nR3kQqAbv1Mxj02As/UH6N21FaUPoR/FHHEX6QFKADkkXWd2XgPYzQRmPwxxf1oSTy
      kNPjf5+hr5VnhNqbJ34O8LihO3OZmyl2eB+bbPqHlceOUm5uT0U2bhKhZv0i+XCR5gASouZJ
      6GElJCxGUgAJUSMpgISo+X8wCptlGRbTVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='75' name='Total vaccinations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend IUC' width='192'>
      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
      iexCj2H+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend yearly' width='192'>
      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
      z3gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vaccinated Population' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWwkSXrff3lXZd1ksXg12WRPN9nXnDuS9hrtJXkhrWUJkAQfgPViCQaM
      NQRZhmXI8Aq2HwTJECT4wQYM2xCgBxuwtTZkrSxpdndmtLOzMzuzc/V98L6LRbLuIyszww9F
      cvpgJdk9ZBV7GD+AYB1REZFV8c+4vu8LRQghkEhOKGq3KyCRdBP9qAsol8vYto2qSq19EvjW
      t/6Cr33tZ8kuz+ObCWy1wWbVQ9TyhJMZ3njtu4yNDjN87hm2VhcZGx9leXGZaE+GTE+829V/
      CNkqJY+M3yjy9tUZ3n3zNV59420G0nGWV9b4znf/hlA4jObXeePV72CGDP7yr77F9HKed37w
      w25Xe092e4BSqcRRTAfq9Tq+7x96vpLuMDDQT7nukumNg2+jAOV8nnAizRnTxtQU7IjJaSNO
      s+lyamSckJ2kEdEpFovdrv5DKEc9CZZDIMlxRrZKyYlGCkByopECkJxopAAkJxopAMmJpqMC
      qH3vD3CnXkG4jU4WK5G05ZEEUC6V8IUABFubWzQbVVbWcgjhs7i4hC88NjcLgGBjY+O+z7qe
      y++t38HN3qD2zV+j/vI3cOd+gPDdQ7wcieTROLgA/CZXP7iKI2BlbpqZxRWmZ+fxyzmu3bqD
      HbGYmZ/mw/dvUctnuXJn/r6Pa6pGRdMxfuIfE/7lP8Z49h/gLbxF7c/+6ZFswEkkB+HgtkCq
      wWB/H4gm88tZKtUGkbFTxGyVpQ2PRCLJ1tYaPVGTG0sFBnoi+L6P7/t4noeiKICC6zbRVB16
      zqJ9+uu43/xVPM8FlCO7SImkHQcWgN+sk6+UEatb/MRnPkMul0PDZXmzwnNP9XPzxm3Gz52h
      kfIoFreIRMKoqoqqqmiahqqqhPQQLi6WHtrN11FVNFVFUbUjuUCJJIgDC0A1Qjz73HO7z9Pp
      NACp1j8uXboIgG1CKhXdM49oKEapXiJi3vu+CnIIJOkSHV0FillxSo0HDKIUBZACkHSHDgsg
      RrlRuv9FRQEhrUUl3aHrPYCiWyD3BSRdoqMCiFoxSg/2AIaNaFY7WQ2JZJfO9gChOOX6Az2A
      FICki3R8DvBQD2Da4EgBSLpDx4dAD06CZQ8g6SYdFUDEjFJxyveZPiiGDVIAki7R4R4gSsWp
      cN+6v2Ej5BBI0iU6KgBTs2h6zrZFaQvFlEMgSffoqAAURUFR1PutP+UQSNJFOu4RZmomjvfR
      xpcih0CSLtJxAbR2gz9aCVJM2QNIukcXBBC73xxCDyPceqerIZEAjyQAwczdKVwhWJ6fYXpu
      icLmOrenZnEbFW7cuEm9WWd2ZgmEx9TUzJ65RENxSvV7egAjBM3ax70OieSxOLhHmO9Sr9Zx
      BfQNDnH79l3WmxaZsML7d5d4dnKc+fkpFuYqJG2fbKnKGSF2vcJ2Jr5RI0qxVsDzPACEauE7
      1d3nEkkneSSXSDtsATAzdZcz5yZZmJmi3lQwVUG9VgdVZ7Anwo2lIj0xA2it/Kiquu0SCbFw
      nEqztBsrVFg2uHUZO1TSFR7JJbLmuWRXsxi6xtLSMqdHhshuVXl6tJe5uSXGTp+hUffpd6ro
      hr697Nlq+LsCsOLMbc3sPscIg1tveQQr0i9Y0lkeySXy/Pnz28/6d18fsWMAjI2fBsC2wbbN
      tvnEQvH77IEUVQPhIZBu8ZLO0/FxR9SMPmAQp4CiSq8wSVfouAAiVpRyo/xALCDpFyzpDl3p
      AapO5f4XFUVGhpB0hY4LwNJDOF4D/94hjyJDo0i6Q8cFsKdBnKqD3+x0VSSS7oRHbxnEObvP
      pVeYpFt0RQAt18iP7IEU6Rcs6RJdEcBDzvGyB5B0iS4J4P4AWXIIJOkW3RkChR7uAeQQSNIN
      utYD3Bsgq+UXLE2iJZ3nWMwBZGgUSbc4FnMAOQmWdIuuCCBixSg3yrvPFVM6xku6wyO5RM7P
      zOAKwdryPEur65TyOe5Oz+E2qty8eYu622BubhmEz/TMbNucog9GiJNDIEmXeCSXyFKhgiug
      VG2g0KBagnRY5YO7izx97jQL89MszJVJhn1W82XG93CJBAjrYSqNMp7voaAgNOkWKekOj+QS
      GY20DrfzPH/XgLPpCXRV4DQdUFQGUjY3lor0RltOMTteYfe6PIZNezc2kKqqrQjR0i1S0gUe
      ySWy6jbJrmbJ9CZw1TAxS2Ftq8LTE2lm5xY5PXYGp+aTaVQwTXO38d/rGgkfGcTtPjbC4Nbu
      SyORdIJHcom8cOHCQ6+fjsQBOHNmvJVhBOyItW9+hmbQ9Bx0TW8JQO4DSLpA18Yc9+0FyOBY
      ki7RNQFE790L0Azwmg+4SUokR09Xe4Ad5/jW2F/6BUs6TxcFcH+QXHlesKQbdHEI9ECQXOkY
      L+kCewrg2rVrR17ww0emSsd4SefZUwCvv/76kYvgIa8wVQUhd4IlnaXtEOj111/n5ZdfPrKC
      HzwyVdHD0idA0nH23Aj7lV/5lSMvOGJGKTtlBAIFpWUO0awCPUdetkSyw549QMhQeP/dH/Hh
      9TtHNizfjRC3nb/0C5Z0gz0F0NhaoKomyPT1HlnBISNMw/0oQpwi/YIlXWBPAWjRfmrZO8wu
      rh5ZwTsGcmJn7V+eFyzpAnsKwKvkMHpO0yhvHWnhhmrQ9F0AFENOgiWdZ08BmIl+1NoGseTR
      DYHggZUg6RUm6QJ7CuDK+z+iVC6TL5T2epu7t65z8840a8sLXL12k3Jhg6tXr5KvFLny4W2E
      7/Du+1f3LfzeI1OlX7CkG+y5DJowBZnxyzjFtT0/VKlUcFUPQ7UZT1tcmd/kxy9dZGb2GvnN
      BqtLywhD23WH9DwP33/YzidiRilU87gJF18LIRoruK57uFcokQSwpwDMWBqz0GDk7MQe73oI
      oaLg47sO81mHdDTG7Ow0uhVjqD/M1EqBTCqMqqqoqoqmaXu6O8bDCarNCrqugxXF8+qtxxJJ
      h9iztfXEw/zPv36VkeFBRod+5oF3NS5cuoivaFi6St1xCYcsKpUqkUgYfwBGfe9A7o33WoTK
      fQBJN9hTAIad5AuffpH14t4N0gqFdx/b4VYW0WgEAE0DTTuYkWnMirFYWNguNAxN6RUm6Sx7
      CuCVV16l2AArlj7SwqPWR0emKnpILoNKOs6et+qf/MIXME2TSnnvVaDDImpFP7II3Y4MIZF0
      ksCximEYR1p41IpSaWwbxBlhhBwCSTrM3qYQmgYCenqPdiMscq9BnG6BW5eO8ZKOsrcxXClL
      XbVZmr7B7ZmFIys8bNjU3Tq+8HcDZUnHeEkn2VMAuhWluL6EMKIM9R9dL6AoCqqi4u14gsnz
      giUdZs9VIEVVSWcGMC2TqG0faQUiZoSqU8EMm/dEhtCOtEyJZIc9BfDhlZv09mX47IvPcNTh
      OuPhJIVanmQ4BcjIEJLOsucQaLNUpphbZHl1/cjbYyKUoFgvbNdGlbGBJB1lTwEM9veTTmfI
      5jaOvALxUILCtgAUPYyQewGSDrLnEOjycz8GwN27d468AolQkmI933qy4xMQTh15uRIJtPMI
      a5R56803WVpaJlco75Xk0LivB5A+AZIOs6cAnPwiFS1Fo17n9o0rR1qB+D1zAHlcqqTT7L0P
      EBukunaHwdPnuDA5+dD7zUaNQqmC5zoUSmWE8Mlv5RHCp1qpAYJKpXKgCsRDcUo7IRKlSbSk
      w+xtCmGGSUUN3njzLVKphwNVXb92hUKxxPTUFNmFGe5MT1MqF5hbmuOtNz/EKW3w5nvXD1SB
      Hb9gIUTLJ8CRk2BJ59hzEtysl9HsXr700sN3f2gdjJffymGHQwwkQlxbdzk7foqZ2RskIyY3
      F/MMZRL7ukQChLQwFadC023i6yGURlm6RUo6xp4CeO21VylurFG99NOc2+P9TLqXuq+TiOjM
      bVV5eqyP69dvMHrmNImYx1Zhk1gsuq9L5A4KoKoKihVFOGXpFinpGHu2tNHRMe7Wa1SKm3t+
      aHT87O7jvoHW/8uXt5cubUj3JR+pEoZu4nhNTMNGlLOP9FmJ5OOwpwDOP/0C559+Ad/vTLjy
      uNVaCUrL6HCSDhPoEKOq2pHbAgEkwi0BtJxipAAkneNYHM0eDyUp1POgS8d4SWc5JgLY6QFC
      0hZI0lGOhQASoUSrB5Anxks6zDERQJJirbBtDSqHQJLOcSwEEAvFKTaKYISgKR3jJZ3jeAjA
      2jkydee0eCkASWc4HgIIxXYPzJMHZks6ybEQgKlZNL3m9nlhMjKEpHMcCwHshEfxfb/VAyD9
      giWd4VgIACBiRak4ZRkbSNJRjo0Adj3DNBM8p9vVkZwQjo0AdsKjSL9gSSd5LAEI32VpeY1q
      Kc/M/BKe2+Du3SmansPychaEz+Li0iPl2bIHKsiTYiQd5bE8TxZmZ8nXXKoVlZSl8OHtOSbH
      h5ifn2ZhtkTMdJld3WB4eAghBEKIth5hO8StOIVayxxCOJV900skh8Gj9wB+k9xmntzqKh6t
      FRwBqNvRnTOJEDeWCvTFQ7sfOcjObnzXHshGOAdzqJdIPi6P3gOoBi+8+CKFQgFd8VjbrPLs
      uTRTM4uMnTlDI+1RrZYIhSwURWktcW67RgaRtJOUloqoVgTFre+bXiI5DB7b+TaRSABwJt6K
      GjEx0XKTNGMQi4Xbfq4drRMjixDtk3MAScc4NrfZnfAoMjaQpJMcGwFEzCjVZhWhh0Aug0o6
      xLGJP6KprUMxhBGS4RElHePY9AAApmbSVHUpAEnHOFYCiIXilDxHHpgt6RjHSgCJUJKi25CR
      ISQd41gJIB5KUHQdGRlC0jGOlQASoQRFryFPjJd0jGMlgPjOEKhRQHQoLKPkZHOsBJAIJyg6
      FbRTP0b95d+RNkGSI+dYCSBmtcKjWJ/5Ovr4S9T+7Nfx8/PdrpbkE8yxE0CpXkQAxsRXsb74
      L6i//A3c2ddlrCDJkXC8BBCKUdkJjwJo6QnCf/uPaF79Js13/0SKQHLoHCsB3B8epYUSThL6
      2d/H35zCvfa/pQgkh8pjCWBh5i637s6QW1vm+s071Mp5rl69RqlW4caNaYRocuXazUfOV1EU
      tJ3wKPe+rupYX/ptmlPfxZt/Exk5TnJYPJYx3MDwMLfvzlEo+4wkdT6cWefFS+eZnb3B+lqN
      dFyj7osDHZL3IGEzQrFWIPnQafEaxlf+DY2/+E1EuBel58zjVF0iuY/HEsD1a9c4ffYC2eV5
      1vM+iZBJdm0V1bAZ6jO5vVwgnQwd+JC8e0mGk1SaZdKxvoffjPai/fS/pf7yvyb0tT9AjaQf
      p/oSyS6PJYChoSHqtRpnzpyhWGmQSkTZ2NhkYGCQZtNn2Gs+tktjyze40PZ9NTWK9blfp/5X
      /4rwz/1h63R5ieQxeaxW2tc/xEAmjW5Y9CTjKIpKOp1GUVRMUyccDmNZ1mNVKBFKUqznA9No
      wy9gXPx56n/9O9JsQvKxOFarQLB/D7CDcf5n0Mc/T+1bv4FfyXWgZpJPIsdOAIlwgmJtfwGA
      gnHx5zFf/EfUv/WbeLk7Mqao5JE5dgKIH2AIdC/6qRcJ/a1/R+OV35U7xpJH5tgJIGbFKDVK
      j/QZNTlK+Of+kObVP8V5+7/gbU4jmjUpBsm+HBun+B2iVpzV4jJvz79JXzRDj50mpIcwNAMl
      4NRuJZQg9LO/T/PG/6X5oz/GL66AZqD2jKMNPI126sdRwqnAPCQnD0Uc8W2yXC5j2/aBl0WF
      ELw29R2WC4usl7NsVjZoeA0SoQS/9tmvk47ssT/QLq96EX9rGm/5A9yFt1AUDe30Z9DHfxIl
      NoQio8+deI6dAPbCFz7vLrzNn37wP/j6S/+M4eRI27Se7+2GWHkon0oOb+4HuDOvIWpbqIlh
      1J6nUNMTqOmzKFYcNAMFZfukGsknnSdCADvczt7kv775n/jVz/wTzqYn7hvOlBtl/t+NP+Pd
      xbf5rS9/g6T9oCnF/Qi3gSgu421M4edu4W9MIRpF8H1QNRQjDEYYxYqhDTyDNvwplFg/inrs
      Ro2Sj8ETJQCAhfw8//F7f8jfe+Ef8szQ8zheg+/eeZnX7nybzz/1RcJGhHcXf8hvfPFfoj9O
      YxUC4TehWWtNpGtbeCsf4C29i6jkUJMjaMOfQhv7vJxTfAJ44gQAsF7O8h9e+/dcHLjMhyvv
      88zg83zt0i8QD8URQvDHP/zPJMMpfuHpXz5QAxUIXM+l4dYxNBNDM3bDvd+XznfxN2fxFt7C
      nX0dRQ+hP/VFtLGXpBieUJ5IAQAU6wW+c/uveOnMF0lHM/e913Ab/O7Lv8MvPff3uTz47EOf
      FUKQq6wzszHF7OY0c1szbFRyuL6LrmoYmkncStAT6aUvmiETHSAT7Scd7SOkh7dXpMAvruJO
      v4I78zegqCihBIpmgmaAZqFYUdTkKGpqHDUxDEYERdXk/OIY8cQKYD9Wisv80au/x2/91Dfo
      sXuBVsPPltf40w/+OyvFZc5nLjLW+xSnU2P0xwYwNBMhBFWnQqGeZ6OywXpljfVSlmx5lVxl
      nYbbwDYifHb8JT4z/hK2YbfOt68XWlGtvSbCc2g6ZfL5BVLNKmJrFr+w2Ar5qIdQrDiKaaOY
      UbDiKKE4SijZ6kXC2//1EKhq69TMe/9oiaelISmkj8snVgAAb819n1fufJt//qXfpubW+fOr
      3+TKygf8ncu/yI+Pfhq1zWpREL7wWSut8jdT3+Xdhbe5PPgMX5n4KgPxIapOheurV3lv6R1m
      NqZQgIH4ML/47N9lOLG9cuWUEY1ySyxOGVEvIhpFRC2PqG0h6nm86ib50iox00ZXNBD+R39A
      yyFoZ6VKbf2/RySKooIRQtG3J/JmpCW6WD9KbAA1Nri74oWqnehVr0+0AIQQ/Mk7/4214gq5
      yjpfOPsVvjLxVSz98SxVH6TerPPD+R/wyp2/puE2EEJwvv8Sz5/6FBN9FzB1k/cW3+H/XPlf
      jPWM8wtP/xI9dnrPuYJAUHWq/HDuDb43/Sr1Zg1f+PTHBpjoO89k5gKD8WEK9TyL+QWW8vMs
      5edZL6/y2bGX+OzY54madsseyvcQbv2jibxTpl7J4hZXaOTnqW/N0WgUqSgqaVXDVjR0M4Ju
      hFE1E5TtYdo9wlJ2hnVGCPTw9iqZ3erJDBvMCIoZRYn0tno2zWwJ8ZgL61AE0KgWuDu9yOmz
      YyzNZZmYGOH6jSkuXZzsqgAAHNfh1bvf5tNjnyMeShxJGUIINqsbpOyePSfPrufy/ZnX+Msb
      f85k5gLDyREiZpSoFSViRml6Dm/MfI/b6zd5bvhTfOHslxmIDdH0myzlF7i9fpPb2RssFRbp
      sXsZToxwKjnCcGIEXdN5Z/4t3ll4k4m+C3x54quMJk9Td2tMb9zl+uoVbmVvUmoUsTQLQzMw
      dQtTswBBrVmj6pRx3Tq672GrGgOxAUYSo4wmRxmKD2HpJl6zRrmyQTY/x3p+no3CIvXqBo16
      Hsdr0kShrqj0+S6DRpi0FSNtxYhZcRTNQKgaQtVb/xUdQ1FQFBV1u8cSqkpV1clpJlnVYB3I
      uzWiRhgbhTAKtqIQVtTthQoTQzfRNRNDNTARmAh0IVBoudeqioaiaqiqjqJo2xufO71d6/+h
      CGBmeorRsdPMzt5kaa7Gxcl+pnNlXrx8nnK5TDgcRlEUPM9D01rDjkd97Pv+rogO8/HOOWad
      eOx4Dd5b+hGb5RyVZoVqs0KpVkQg+PTY53hm6AUs3Xqs/BvNOu8uvsOrU9+m2mydsnk6Nc6F
      /ktMZi6SifXfl37nZ995LITA8Rrka3lWi8ssFhaY25xhtbyC5zdRULENm75oP712mh67l4gV
      RVcNTN0kZIRQhMJmNcdycZn18hob1RzlRhEAdXuopaDgCx9feAjPAa+J7zUQikokOkA6kqE/
      OsBALENED9NwG9R8h4pTpdKo0PDrOE0Hx3PwhYfjOTiugytcHLdB062D7yDcBr7noPhNVN9H
      Fa2/nR5p++oPRwCLs3cx7SiVegWv6LJWc0gnLSbPTXS9BzhpCCEo1gvEQvE9e6PHwfM9VFVt
      zRWeMHzh4/ourufii1a4zZ05j8JhzQGEz1o2RybTS9MRND0HTVUJhUJSAJJjzSd6EiyR7Ids
      lZITjRSA5EQjBSA50eyaS5ZKpSNxIazX6weOCieRdJquTII9b3tZ7Z5dwoO+du9atnzt/teA
      +77nbr127/7NcX+tq6tAvltnenYJKxzh1PBA21Vmt15hZmEZw4pwenSofbpGhZn5ZQzL5vTo
      cNt0vuswN7+IZoYZOTXYNl2zUSW7UWKgvw9Naz9abJQL1JUQiUiwiUWzVmJqbhm36dDbP8Rg
      pnfPdMJzmJmZR7NsRkfaX6/wmszMzKFZYUZH2l2vTy67TtPzUTWDTCYdmN/s7ByqGWZkZLjt
      +NhrNpidnUfRLcbGR9umq5byLK2uY8eSDA+0d2XdTRdNMjy4dzrfa5LN5hCAGbLpTbXf1a+X
      i5TrDg1PMNzfvtx6udDdOUB+ZZn1Uo1SMTgMSq2wiTCjpJKxfdJt4ZsRksl4YLrqVhYRitPX
      G+w1ppshhFPk3fc+YGF5rW061dC4c/0K07OLgXGrnWoFK9aDpmpk2jR+gPLmOmu5AsVikaDB
      YyWfY209T6FYCkinkEwmKBeLVKq1wPrVipusrm6SLwSX26yXafgaqVQycGuskFsnFE8Rj0YC
      UkFxYx0rliIea59OUXWSiSjVehMlsHZQ2swxtbRGtRDcroob690UgIcRS9EfD7VMfwOwezLY
      mku1FhwG0U71EdE8avukE76gVMizlS8GpnPrZXJFl7PnzjDQ19M+Xa1GteZQKBYCG5jd04/l
      V0j2DQR88T6KFWUwk0TV9MB0GDaD/Sm0wHQKjXKe3EaRcqUSWD/TjnH+4iSWrgU2DNOOk4yY
      VGvBguoZGAKnRr3hBKSCnv4hlGaNeqPR/ioUhXx2jY1CkZXl1cD8kpkMqbBBNNn+NwNI9g91
      twcoFktohkkiFhzgtrS+wo2pBVZWVgK/8HJujRt35/dNF0okwalSrlQDy62XSpQqNRYWFtEM
      o206TTcYHMqga+3TAFRyK1y7NcfS0kLgHTtkR9BUyGSCImAohMI2/QOD9GeCo2TbyT4GMjGs
      kE17A3BBtVbn1tX3WibUAfk1ynmuXb3F0spq4L04t7TIzOIKK8vLgfXLLS8yvbjCyvJKYLrM
      yGl6IyaDw+2DIgBsrKyQGjzFVm49MN3m8mI3BaCi1MsQjrOZC47taUVinJ8Yx7SCf5hoT5rz
      Z0eJJ1KB6Wr5PNnNIqVSMVAoVjzF6aFe7HBwF46q4vuCRCIWWK4RCjN5/izJZE/gF1/bWqNp
      JMgtLwUKpVHMcfX6Tebnlwg6VLZWyCHCvYhaiWbAipzv+6TSGfxmI/B70c0QFy5PYhlm2+sQ
      QpDo62P81ACJVPCd2I4nOTt2CiscfCNcnZ1hcX2LhYW5wHQ9AwPcfO9tTDt4yGzHE90UgMLg
      U+dwNleJJoLH4vN377K+mUeI4LFfrVSgUGlQq5QD00V6erk4MU4snghosD61Wo2FmWnQzcCG
      7TlVtkpVXDf4bGNFhfm5BTRVCWhggny5jlPexLAjgT+QFY1jhcJMnBsLjHBmRmI4pU2EppLL
      bbWrHZYmwIoxGrAwALC6OMfCSg5FiLbX4XsOt65ep+J4bG4E3eB8pm7eYqtU3vf3tWMxnhob
      oac3uMfLLa9g92Rw60HH7Aqmbt7u7hColFvDUQ30gBUWgLHJSUb6M8QTwZNb3TRwHQenXmVt
      fbNtulqxwFa5SjgUvGpTKxYYPDNJTzy4B/Bcj1RPmt6eIH8Dn+WVHH3pFL4fdH9V6etNkl1d
      p1guB96JNTNMOm5y7fpN5hfbj4u9pkMuu4URCgVOvk07ilPaZHF5LbDcwdEznB0/RTQea9uA
      NN1i8uIEeC6JZDIgN5WJy5cY6OkhHg/+fYVosri0tm/wgYGxcc6PDRONB/0eChOXL3ZXAJYd
      wqk1cL3gO6dTLXNzeo56uRT4w/iuR7FQRLPC9AdMWo2QSbPu0Gy6Abmp9PZn2FxboVAM7lFM
      O8bW6jx3p+cD6qcydvYck5OTPDU+EvjFq6rGwGBm37AuXrOBFkrw7NOXGQho2JpuYpkK1Xoz
      sNxGpcTqygbFctCqErhOnZs3blOr1gKHXvVqFc0M05cOHgJVi3mml9coF9r1Ti3C0STnxkcC
      DSt9r8na2jqFYpnsWnafcru6DOqxtLKJbWn77EC7eHqE8aEMiVRPYNes6jr9A33oevBkdGF6
      DsXQ2dzYCBSUohkMDQ3QaNQC82vWKqQGRjh7ZvRQLOZ94VNv+pwO2AOA1v7Dh+9f4cr1m2hm
      u2v2WV5eJZ5KUNrKBzbsUDTBs89fJLnP2NgIRxga7CMcDgWmi/WkqWxlKVfbr+64zQZWvIeh
      ngSp3uCwl8XcOneXgoWiqBrxeJx4PM6FCxNt03mugxFNdTM4rsaZifYV/AgdO6zjKTFKhaBz
      AzxW1jZRfH9fAQyPn6XS9IlGwsF3ACHwhcCpN3bc0PcklOglWstSrdaJx4MnXgfBCMfo762z
      uLjEhcT5NuUKTDvGpUvnKFaD7uwKqqqAovHs888GpBMIRaOnN015cwoXMNuky2dXqPs6w33B
      +wAby0uMnrvI8twMg317z/N0w0JXK0SiMUrlCrD3cMlzGxTqLsmQTjjafmijKCqRaDSgVi00
      3SRk1Y5fdOiH8VhaWuPunduMnn8mIJ3G+LlzAOSy64EN1q0VuXp7hYG+BBOTE20aRZOtfJ1T
      p05x6tSpwBpWN9e5fnOaVG+C/oG+j9kLuHz43vvge2TOXgpssIViGUXVSCWC9lEEvi8wdI2N
      3AZ2215FsLq0RMP1IBQObBhCM4mFYX0tSywR33NpVQhBMtPP3MIMff0DbfPy3AZrazlu37nD
      xed/rG06Tbc4NzkZUKtHp5hbfxIEoHF6bARfUTDNg1U3Hbh+LrBTaXpjGxghO8j67O4AAAQE
      SURBVKCxuty6dp2tfBrdshk/fap9DxCNMTl5BscVhzAE0pm8MMHiwiKlrQ383nYTTZVo2ODt
      d28QSSXoa2vioDI6frAjZZM9PZRKZRTNCLwOK2QzdfsD4kPjbQXqew7Z9U0syySX26A/3W6l
      TyEzMIAdi2GFgzdED5t4b++TIAAorC6TLdRIOC4iwGboYHgUizXSmQyaEbQKZPDMC88ST+yz
      BwBoVhjRzLK1WWQjmSCdCl7N2A87mmDiwn4RLASqqtE/2EetcRjWtgq6phFLpLDazidauM0G
      qhmitj1Z3qsH0HSLsTMt4ZXLAYsIQtBsNCiVSpQrVWzbJnTAG93HpZDbeBIEIKh6Hn3JKIlE
      8hBm7Srl4hYNz0c3gxqOTjxxkK9H4DUdfNXkueefoxr0Yx8Ij8JWiXKljKqbDAxk2gje44dv
      vY0Z76V3n3Xxg6GgKi7v/egqQ8MjjI2PtClXwdIVmk2wolrgIsIO0YAxuaqbJHpSWLaNoviU
      iiVCbXuLwyUzOvYkOMTUKVV1vEadVDJ+oC98P3zfRwiBqj16ZLiHcfnB698nt7HJwsLyvnsV
      +6OwvjzP+laR1bVswPXqfO5LX6Y/GWI9137P4+AIipUmF86dxiN4KGdFElx8+jypePxjNyBF
      UVibneKdD65w5+48fR1q/ADZ+ZknoQcwsAwX11dZXs0yMtx+QnUwFEbGn2qtjBwKBi995aeY
      vXOT7MYmY2Pt5woHQ2VkdIRbcyt4ATut4PLGq6+hRZJkMpm2qQ6Ox9pqFtf3sQ0dj/bnZ9WK
      m9yeyaK5LpmRIT5OnD232SCcSnMuHMMLsFQ6ChTlGJ4R9jA642fPHmJ+CocboMLl+6+8ih7r
      oT/TbrjyaOghm3QqQbFcDbjD6nzuS185hNI+ym94qA/DTiBcJ7BhhGJJkvEyjUbzYzcgp7LF
      rdsr9PREsGNBO8aHj2XbT4IAjjs6n//yTx16rkIIGvVG20nmUZBIbc8lrOBJsFMtkctuEk0l
      PvaQVDNtJi9MkkoEG8IdBYZlPwlzgJOHqqo4jkOqt/cY/kA+NVfj+Rcut8INfszcLDvelcbv
      ew7Lq111iJG0o7yZZTW7ta9HWHdQUGly5cpV+gaCTTWOM6pm0hsLNuWQdAWBHkkyeWYQX9E7
      PC08CIJKpU4ylaJWCbZWPe6EYgk5Bzh+uMzPr+I0q4R0A4/OzQEOhsqp02PdrsShYIbkJPgY
      YmCHfFKZ0yheQ3bRR4TY3oGWwXElJ5J6eZ0Pri7JG4zkZKKoGoOnRuQQSHIyseweRm0ZHFdy
      wpECkJxopAAkJxopAMmJRgpAcqKRApCcaKQAJCcaKQDJiUYKQHKikQKQnGikACQnGikAyYnm
      /wM8uvyFTPsP0gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aaxla3rf9XvfNa89n6nGe2933x48tId2YwwOAadt4w/EMXIQBJTIAkVI
      5gMSwgEkIiERESEsAkYQAeIDAkWKcGwRQEnIZJN2HGLHdtyx6W5339v39q3h1qlzzh7XvNb7
      8mENtfY++wxV99SZ7v5Lparaw9rT+7zvM/yf/yMWi4U2TZPbgK+8++5Vv4Uzsdvr8XyxwLcs
      fNum63mI6r6iKCiU4igM2ev10FpzsFiw0+thSLn2elGa8uF0CoBhGBhCsNfvYxnGJX2iZUyj
      CNswmEYRUZq+nhcRAtswkEJwbzgEoFCq+Y7mcczBfH6uS5mmaeI4zut5o5cIrTVRnl/12zgT
      T6ZTcqVQWrPb6yGFQAjR3C+EIEhTMqWwDYOO4zBPEka+3zxOa83T6RTXskjz/MXnrv7uui6j
      TufSPxuAaRhoIVgkCWlRXNh1e65L33UZhyFpnvOJnR3eOzzkw9kMgDv9PlJKtNZM4/jca2H9
      trLBa0OuFABJnnMQBCilyIsCrTWiMoa9Xo/DxQKtdXlK2PaL5xcFeVHQdRyeTCYcLBbHXsO+
      whPdlJL3Dg4udPEDdB0H37axDAPfcdBa07FtxkHA0PeR1eYQpimzKDr/+73Qd7nBMez1+ziG
      waPJBK310n3jIGASBPQ9r9nBhBB0HYesKAjSlK7jYFa3A+zP50RpSpRla19v4Hl0rvBEN1+T
      65XkOdvdLm9sbXEwn1NozXa3y8FiwbvPnyOFYOj7L7X4YXMCvHZEaYpn2zwYDHBWduZCa4a+
      v7T4odzFjoKAJMsolFpykba73aX/17jb7/PJ7W0ejEav9wOdAq01j8fj13LtSRg2p+dOr4dj
      mliGwdt7e5iGgdKaoyBoHnNebAzggjHwvKVdcB7H7M9m9FyXu/0+ppT0XLcxhjjPKSr3ByAr
      ChZxzFvb2/jVTt5e8I5p8mA0ao58U0ru9HoMPA/fcZrbrwJhmrJIktdybcc0EYDSmqD1Gkop
      eh/hxNsYwAXiza0tHoxG9F23uc02DIadDhrwbRvPtuk4Dp/a3aXvuiyShGkYorUmzXPeOzxk
      u9vFNk18217rUhwtFqgqPvj03h5bnQ6mYaw9GS4T8Qlu2UUgyjIO5nPiLOPx0RHzKGpOnK7r
      Yp6QJTsLmxjgAvHtoyMc0yRtZSDSouC9gwMsw2Cn26XvujybzejYNlZ1Cjybz5nGMVmdBg0C
      HMti2Mr81MiLgnm1A3onGMhVQVUxjhSi+fdF4mCxYBJF7PV6dByHXCnSomAShtwbDvng6Oil
      r7k5AS4ArmUx8Dw+s7vLnV6PdT+90ppxGBKmKblSHAYB8zhuagBx5e8bUhJnGVlRIIRYCpwP
      Fgu+dXDQGNjhYsE4DJv7V4Psy4ZlGIw6ndey+AE0lO5OtSnUJ06SZQw8j91e76WvuTGAjwiz
      WrDTKKLQ+tiPP/Q8oCzUxFnWLNhJGLLl+82P5ts2hpR0HYc3trZIq1hAt65pSkmykt9+PB6z
      P5sxiyK+dXBAfsHpx5eBISWGECcW7S4CszjGqty9OhYwpOT5fE7xkgEwbFygV0bPddnudBBC
      8N7BARp47/DwmAHIUxZDXcSB8keUQjCLY+70eux0Os3ifz6bIYTgKAiOXUMKQVoUeLbNvcHg
      Sl2inuuWQWqavr4qMGWdI83zpgYSZdmJaeGzsDGAV4ApJQ+GQwwpmUQRGpoMxSrWLVoos0Uj
      329coXm1s322SutB6dJorbk7GKC0Js6yY1kW37a5PxxeafanRl4V9bZ8n8evyQBypfj20VFz
      sn5UbAzgFXB3MCh36yhiEUVIoH343u33yyO5Moie6zKP4zIj5PslTSDP8WybN2ybZ9XxvdPt
      YhhGUxVO8xyldelaGMZa12KRJHz16VPu9vtsd7uX8wWsgVKKx+Mx8zh+7a8VZxnzCzL4jQG8
      JO4Phww8j0WSsD+fI4Xg7d1dni8WTKvTwK5TkpUBdG2bvCjwLYuR7+OaJt8ej3k8mWAZBkPP
      w7Usvrm/T1YUTZFnVi0m17KwW/9fhSEEA89rFl+dKdrqdOjY9qWkR6WUZdYKTnyfF4nggk6Y
      jQG8JKZhSJSmBGmKJSWmlFhVccq3bZ5Mp2RFwV6vR1Fle2ZxzNDz6FfMzzouqMv2eVFwv3Kp
      kjxf8mkF5Y53Wo49V4pv7O8DLAWCsyhi5PvcHw4vxQgGnodS6lIM4KKwMYCXRFAvfsMod3Xb
      RmmNpHR1BpV7s9vrISpWZJCmaK1J8py9KutjGQZdx2GRJGRFgSEle71eSYHIczqOw1angyEl
      WVHw/uHhqVmOk+4bhyGebbN1SezQgefxeDK5lNe6CGwM4BWRFQWGEPRdl6TanfOiYKfbxTJN
      tNZkeU6hFJ5lEWYZYZax0+uRK4WgdKcOg4CsRWPuuu4Stx3KoLtj26+8s9YnwWWcAgfzOQPX
      ZXpDToGNAXwEFFrz7sEB8CKro4H3Dw+bfP1qZuib+/torbEMo3RrqrRhXp0ChVJLWaB60b5q
      mg/KQPnpdMr9qnnkdSItio0LdFvhVvyctCiadGS9vGXVyHIYBKe6KrVBpEXBO8+fI6prfP3Z
      MxzTxDFNTCnRQJrnSCGQlRv0URC8JpJaG6rKZM2T5JWKUleBjQGcEwJ4YzQqO560LiuSpsnj
      8Zi8amM8L2zDIK12/IHnNUHuWcHuR0FWFCR5foySfRGoKRiTMGQexzdm8cOGCnFuaEo3pHZL
      Bp7X0BZO8qwd02TQKtjc6ff55M4On9zZwZSS7U6He4MBn9rd5d5gAJQpz3uDAUPPQ1YxRh0w
      vyrjEcqTJ35NxamjICAvCgae99J8/KvG5gQ4J6QQeJZ1LJDMKhpCuLK4bNOkW/WxTqt0Z6EU
      vm2ziGNypZZ245oj9MZohGEYLJKEt3d3MaXkKAgYVZTnJ5PJidXls7DKI7oIaK2RQvCkyvx8
      lFjlKrA5Ac6JbtVsUh/3Gng2m2EKwcOqBrDd7WJKiWtZ9FyXe4NB43tvdTpLhbLtqmiUZBnj
      ICCs2h9t02QahniW1ez4Q8/j2XTKNAw/UrtjnKavxcWSQrDV6TQ07ZuEzQlwTgxWuCdHQYBj
      mni2jdaaN7a2sAwDpRR7/T5PqtbAmrqcK8WndneRQmCZJqZhEGUZcZ6zX0l41Px/rfWSH60o
      O8ts06Tv+/Rd95UyLaZhYF0wU1MIwTyOr7QP+aNgcwKcEzXZTAhBlGU8XyxwLau8r6oIK6W4
      PxxiGUbZp6oUvcpwZlHEewcHTY+v5nh7X73j91y3OWlqqY+39/bKTjHD4MFo9EqU4yBNX0st
      4E6/z/QlkgDXCRsDOCc+GI9ZpClU1d2a917LfyillhpS9qpG967jNIsuyXOOgoBxGHIYBHQd
      B68leVLDNs3lPmDLatwvVRXJdrvdsv/4JQzBNgzmUfTSygmnQSmFFIKR71/YNS8Tt8oATCnZ
      6XReCzVYac3zxYJv7u9zsFiQK8WTyaTk8Vd/al0fKAlqUKZP2+/m2WzG0+kU2zRxTZPdbre5
      /8l02gS4NWVCKYVayaxordnp9Xhjawt/jQGdhHmS8KjSEjqLry/Ikfn+mdecxjGH8zkdx6HX
      6oW+KtTf93nXwK2KAT6xvY1Z5dbDNGUSRRealUhXsihCCMI0JUxTkjxn5PtY1U7d3sGHnrdU
      J6h9fFHt3iPf5ygMKYqCgeseW/D1c+rXbOPuYIBtmkuyIaeh5zjYlsUijnHXZLWa18MEc/vM
      60lgHEX0PO/KBbl826ZTFSoHvs9R1UN86vMu6f1dCoxq8ZlS0nddOhVRDWCRpkyjiKSqrp7V
      t2pWtISR7zOJorWPn8cxqlIoswyDJM+bnb+G1po7/T59z+PpdNqkItvuUt91SwPQmvePjjCk
      5N5ggKAMXLPqPX9wdMRbOztLi9Y2zVJXSAgOKrWIMz9XUdA9R0OJ5vTuskIpCq0Z+D7vHx1d
      SQ1AUBIL7w0GeJaF1po8z6EocC0LGUWc9q5ulQGsNoXLyk/XWjN0XQaVkoAUgjDLeD6fo6Fp
      XKn97O1Oh4Hnlfl3zyMvCjKlSnWyTodFkjQny1b12Pr169277uaqEbaC3aHvk+Y5syii57pE
      WdbwgOp6gtaaruMQVuxTU0qyPGcSho3up2gF5j3X5TAImh6EkzD0fQqt+XA65e2P6LIYUrJV
      NcGneX7pHKCubXOn3wdKI9Bak2VZKTJcFKRZRscwMCyLyQnv7VYbwOptUkqc6ovqCoHT72NZ
      Fo+mUwqleDgcNkQ1rTU71ULbrkhuRaXFs93pcBgEHAZB0wU1cN0lf1xrzbPZjJ1eD1NKzOqE
      kEIw8jyEELx7cMCDKoCUUnKwWCxxfka+T8e2CY+OmpNjfz7HNs2mKFf3FsTVtc9iDH0wmTQ9
      DKuu2qsgKwoejceXwjVqw68q5gJYLBZo18UwDLIsw7ZtsizDM022qr4M17JK3dCV93mrDOA0
      GCc0i0speTAYkBZFs/BXDalmZ9pticJOh4Hroik7oJ7NZjysZAmDJCHJc2zT5Ml4jBCCrDoZ
      ZJVG7TkOEgjimF5Fc7g/GHAUBMyTpFRCEwLLMMreg+r5grIpx6oMSymFlJI0z89FmMuKAglY
      p/j/54HWmnkc82QyuVTXR1C2nBZFQZ5lZNVJHAQBpmmilMKuajOe5zWV6q5t03dd+lnG0+m0
      OfVvpQG0ZcTrzEy9sOvF3Q40DSnxqp10dfG3tXnWuVhCCHzb5mCx4JvPnzf3bft+E4scBEFj
      AHklex6mafnDVAUk1zQx6g4zKdnudpFSMg7DpUDeNIxSgeLggIejEZ5to5RitzKIZ7PZmXHA
      yPMYvELasqi6vfKiaGTKrwKTMGTb80jTFMuyME2TtKpx1IvfMAzyPKc9+0JrjWeavDka8WQ6
      JSmK22kAwNKibS/ctiG0U4yrIlTtx59kBG1jGrgurmXhWhbTKFpa3H3Pa2jSdQGrVjPuVkd3
      7crYpomjVHMadR2noUxDWSSzDYMgSZhEUSMVXtMR+p7HewcHJ/J+jMpg689+0sm4Dk8mk4bX
      dFXQlFk1oTV+JR0D4DgOYRhiVcVJ13UJw7AxgHYWzZSSh8Mhj6fT22kA9QJvnwTtv9uPaf//
      vMiKAqU1drV4vGraS429NQpl2ystiZpS2rA2rtoAdno9ulnWGGYdyNduxuFi0VSR29VioHGZ
      3tze5tHR0doUsHmCusRZqHf/q4ZtGPi2TZ5lzelef1d1MVIIQZ7nzfdSbzxtI5D1lJkr+ySv
      CfXO3t7p1/n1cDynftb1ojTl2WzGo/GYqEqrnnb901Av7NX3IYRoGuELpXi84mPX6nO2YbBb
      yaDUr13v+o5p8tb29lqRrDTPy0zYSxhBoRTPZrNX+owXjb1ejzRJcBwHL/wHdCa/hFF9FKMl
      ECxbC76WTk+rjQvK9tU0z2/XCbBuIX4Uvcz2SRJnWbN4Cq05qKgMg3Nea9XY2ilMKHevuh0y
      V4pH43HTNL8OtSK0qrlFWvPewQF3+n2Gvt+0WR77TLBUvT4LSmu+dXBwKotUCMGDwYB5khBn
      GcMq+Oy7Lh+MxyQXJNfYcxzcupUUENlzRPoUgaJQ5Werv4u2a2dVp8aj6bR0gaoToOc4t88A
      Tvv/SWj7+G06Q9H64byq2DWLY+yq2lzz+c+bTTnpcfXrp9Wu9Gw2Y7fb5dmaQW991y13+vZx
      Xu12UgiezWY4ltUMzluHaRyzVaVeT8JREJR1Eq3PzPJIYBHHpUBtp9OoXiuluNvv8/4FDc3w
      bZuiKLCqglc0+KMINHGm+GAyQQFDpRp3sx3f1ckDrTWp1k1W6FYZwMtgdQduL/y2T73kUlFp
      32hNz3Wb55zXlVr996qhuabZSCD2RyO6rsuHs1kjeNVzHB6ORide68FoxNPJhHf2T+fwHAYB
      A9dFnhAE10Z43tbGQmuiLGO3mmZpqycU1hvld3NBVBTPsug5DlEY4lcZrEKV+4AG8joYbmV9
      ZCuzZ0iJAXRsu6wXVO7irYsBzovVLFE7K1S0hta1RxcZVWan3Rtw2q6+7jVXF2+bRZoVBfvz
      +dKufn8waILtWt3hG/v7fKutPFFdw7dtHm5tnfnZldan1gxeRd8/qU4vrTWZ8QCtNWGa8uiU
      k+hlsOX75K3kALz4PpM8L+sDvV6TeQOWAmRB6TbGWVZWkKtExa06AVZTmet255PihHa6c9WP
      PMl/r5970mI/6X2te2yYpny7chXqtsk6dVrXEjQvWidzpRqpk1o2sVdNSmmnTU9CmGUn8oGy
      agN4WTyeTuk5Dp5lsUjTC8kauabJ0PPwLYswDOlU7k0T+BcFzxcLBq67NCppNfMnhKDvOHQs
      a8n1u7UnwGkLf92CXs31t3k97eecFLzWmMdxo+u/et2TkFWFpRphmvJoMiGudviDE3qAo2re
      QFYU2KbJtw8PWSTJuVyy8QnsUaV109/7ssiVYhxFPJnNTl38542ZXNPk4XBIv2oQWt3QkqLg
      yWyGoCzuAVgiwOVDhBC4rktSy9dUv4FRbRA1bpUBLOV5W65LfVu9sGWltnws/dj6s5reXK0p
      tHEwnzONIg4XC+Isw6l4NudJj2qteTKbHeun1bA0HlVUees7vR5d22bL9zGqhvl3Dw6I0pTd
      Xo9HR0fncl9ypTiogtw2ThvBelF4e6jY651OxKsXv9Hqs2i/V6U1j6dTVGUYL1K+BpqyGFYU
      xdJuv87wbpULVKO9U7RdlNqvFkI0pfLVxd7OH9fPr1ON6yrCqvJB50lCz3Wb3Dyw9LyTcBSG
      J6YY28OmpSjbKEe+X1ZChWDU6fD+4WHjDonyw5/JCK0xDkOGvr/UlXYZcwb2I/dMhYq+62JI
      iSVijOSrRNb3H/9d6v+33nOmXaA8MYIoQkuJc4KbCrfsBIDlnTotiqb9bxpF5K2shxAC0zQx
      TXOpm6sdD7QD4naw2i60RVmGa1ns9npLi7/Gqiu1ivNSC4qKQ9ReBLZhcG84bAK/Os13Xihd
      MlZnYUhcCfheBtVhFidnGkCdzVFItCizPkuxF5yox6S1JggCtJQcRlHTjLTuu7lVJ8Dqzn+0
      WDRDqOdJwvPFgr7rMvT9kmGZ52RZhu/7a+kSp6F+nG9ZuIaBbdtlKx4ZuTab3b/9+NVdKM6y
      hiR3HkStQXo1uraNVqopmBlVkee8110kCYskwZKST+zsXDnXp0adpcqVRWZ8Br3Sc20ZBvf7
      fZ7MZhSV6p0pJWGWlep0lVCxm2Wnnmq3zgCg3NmeVvO3Dip9fq01CpjEMZNqOqNpGAxsGxnH
      ZBW3xF3TJHJWIBvHMXEcc0f/fYzZb7IY/Wt8OO2ytbWFvdIjsLqLvQzaC78dX7TfWz2oe39N
      Ee00ZEqVwr0v+Z5eF4I0bYJfrUul7ZroVsM0DARQUPY5WJUmkyEljpQ4psndSqb+JNwqAwiS
      hI7jIKUsC0p5TniCf60pd5nDKCIrCnZ7PYqiIMuy5otuE9VOc2U8zysZnZMQVIJjafb29srX
      WV30Ky7M0PPO7FutMfS8tUQ21zSxDaNJmdqmyeFi0XDez4vLXvx1C+u6b7XdOvrhbEaepjys
      2kG1LnuqP5zNmucaQpRTN90pSgvCoqyHnJTCrn+HW2UA0yShW4tGaX1sdtc6aGCaprBYlFXe
      qtReo10bOOkkqOOFYPTHMIdfIqWPUC8W/onFMmCv22VW9RafhcMgoGNZOCs7oSElDwcDECUb
      VFatis+rKYrXDaWrWIoYfPvoaO3GkhUFR2FIkmUssqzc7Vvf/ziKljhGQggOgwBLDLBWZGWO
      vX7rvlsVBA9cl/35nHEYsnvCwOqTEFZ9uTkQRdExmsN5YoO8EMSqh1LLRbDToLWm7zg4hnFm
      BkZpzbwlZ9IOzutmmvr20UtqBl0mNKXUpCEE9/r9tWp1mtJ9Tatmn3a/NJSfsa6QWxUztuta
      DOwDwnD9idr+PZvM4MV+tKvFPEmYxDFJUfBoOn0pA8iU4iAIGqmQZDUvr8+/qNuPOY/h7Ha7
      vDka8cZwiHeGtEhcKVSvu/Yqb+lVqrmXhXpHNwzjxIDdMgw+Z/8+b4S/yJbvNNmcXKmSOFid
      AI6UmFoztC1EsaDb7R77/U5KR986A6jxKj/+PEmYxjF2lVbM87zhB60WtdpiWBcBrTVW1Z+8
      Ttyr/n+navk7i1ohgAfD4YmpwqtGkufkVX+yvYaQB1VBU0eIYoFnGfiVavb7R0dLsZ3WZf9v
      x5yRmm+XKVCtWSwWTc/wKurv8FbFABeBIE3RSiGVYquS3FjFakEGju/47dtP4gutu6YQpWpE
      z3GIs4xZHBNUP+Kdbrfhu5zHwF3T5E63yzSOia6of3cVlmEwME0KKcmUwjZNHo5GHIYh8xX9
      pTTP+QO+yHbvn+MwKDN5h61NzqiKg45hEAQBO/JdcsvBtv0m+xZF0THadzuW2BjACrKioGax
      7LSqwuvcjRqrJ0G7aLbqOtWtjKvZnNUA26x0RaWUBNMplmHQP0HHZ10/Qx1Y9iq5lvfH45fO
      Cl00TCnZ7XawVUqsDYbGh5jv/AOMx19my+oSfPqP803jk83UzEIptJD0uj1iXYlgpWk5k7iK
      cbKiQOpSD2g//17yOGc0tJEip9BlsqBWzoAXNBlZK2pc4fdxLaGBjuM0vPwTS+hruEb1F2sY
      xtKfOo2qq2s+Go+Pce3X8Zeg9FHNSvZkHT9/1XDa6dqG3iEE93u91zIe6WUghWBLfJtR9Esk
      SiE++Armu/8nIpkgF4/ofuUv8pYd8Z3+Ad8r/hGf7ik+995fwfulf503/95/wL351xhWVGbH
      NOmmX2Xv6V9gK/w79HqlisZwOMTmAHfxN8vXlJKwih1W3VYhxOYEWIdxGKIoxWo/sb2NrOQE
      22i7Ne00absC3L6/XqRutQjDNG3EZNdVjWvYhoGogtokz4+J4a7GA+tYsFAqTLum+VqmxJwX
      Giicz1DYbyJDhXXwT5buFyqjP/4tjPj/ReiC4Ye/DE+flHfGE8wv/3m8H/+vya07OI6DefSr
      iHyCHP86xvBHmusk7JJ1/yW00sRxjG3bpGmKV3GomtcTYnMCrEO9z+ZaNzTl1c6pVZfjpNvq
      fxutrMedfr8hwK2LJ9oQQrDX65WZjhW3aSnrs/KnrZCQFgXzJDlTEfp1wxCCD8ZTvrY/K/39
      zp2l+zWgu/fRhkQbAqbLrZQij3Em36AoipKnNfxn0dJD9b+Akj5xHBOGIUEQMJnOmM1m+L6P
      7/tkrewZvPhdNifAGTBXGKSrcwDWYTXoXT0RPNt+ofR2wuPaMYRTUYNPunabpFe0jBDKmObZ
      YsHI884sCr5uxK3TJy0KZm/9JMOjryMXj8vT4c0vobY+g5xrtHDQ259Hhr/ZPEcjMFzYSv8e
      qfPDRJ0vYrz9RbQuYyvP8/BWuvWc7F1kGmMOvpvZfIFlWTitmQ0bAzgDz4MAU8pGBa7m+sN6
      N6j+N5zeSdZzXfI8P9aX0H5+87wT7lutUI+jiEWSlG6TEIR5jubFgL8oy67VFMd3F5rP/dC/
      jx0dEeguorOLl8xRoy+BlKidh4jJE8T8MRqB+o6fQhpPkOPfx5IeqfP9uDwmlG+TpDm2bS9l
      fOzs29iP/idAw50/Trf7gxRFQRRFKKXodrsbAzgLSmsez2ZsuS55muKYJtZKWR6OB8U1TnKR
      lFKkaYphGFiWhV2ptR2FYSOpeBLWNYc8n8+b0avjKp1YP6LvOOX41X6fRZLw4TWhSCitmWUm
      w959Ou//Nsbf+PcgXYC3TfGHf45g623Uj/4FOvETtNMndXdxs29hCpPQ+i466T/GGP/f2Ht/
      mqOgJB9C2QhjGAaCF/3A6GKJAj+dTjd1gJfBNEnYtm3cimzW7h2oYawYxkknQP0YtxqGkSQJ
      i8WCgyAo3QQhSHu9Rp26/fxVUp7WmqIo2O50MKQkSBIypZaq4E4V/NZDJEwhGhWFq4RjmgjZ
      RS4OMH7t5xGqcpHC5xi/8ufw/9h/BczIt76bKE4xVYa9/7+Dzkh9C+l8D373Cdp5iJQz4or1
      CzCwnlD4n4UHP4MoIrLuFxq2X5IkjTjwJgg+JwqtcVtTUNZVgleD0lWcFORK02RRFNiOw6jX
      wzBNxrPZkrDVaYW0NElYVPTnthpc/YxniwWwQDLjw4omfh2Q5DmPJxP0k99+sfgriHSB9fVf
      wHr2l3Dmv4pdLEpJd3sbbW3jeh0smULwe6j4Kf1+n55vsG2+Q7/rYQhNkiQciU8RuN+H0uW3
      sUgSgiojBJsY4KWQ5jlWa9GvK46tFsTapDqdJiyefIA0TDoP3sQwDIqqoX2314Pq+XalD/Ro
      fx+v08G17UZtrUZ9zbYCstYa17LY8X3ySmB3EsekRcF+UL6vOL9eg6w1kNt9VoesakDv/gsI
      nmH+7l+lH/7P4O+Rf+eXwDFx43/EVH4B595/SJxZ2IaBs/gyxvhvo+9v8XS+gzJjDuOYjmWx
      1+vxeDolLQoeDoebIPhVsLq4V+9bt0trrcknR3ztf/3vefzrv4KqUpGm3+GtH/9JPvsn/i2k
      4yJq/dEs4ygMS2779jZPDg8JK/elbn2M4/hFlifL6HQ6GKbJ4WyGWSmexXnOJIoawtjrGJB9
      UXi+9T34259BHH6juU0//CGORj/Kzgd/BREelTeGz5CP3yX8/J/GKp7iEJPkNraRk+eS3P88
      Ih+jzF08vxQbAAiqzju7YtzWfKpNGvQlcdKQ6ZMWP0Dy7DG//mf/XZLx4dLteRjwzl/9yzz/
      x7/BD/9n/y3C6zS7v1U1yiySBFnNC7Ok5HA6JUwS9oZD7KonwLbtst2z0g3ak5IPptNrle05
      C4tUEf+L/wX2H/xfiOkH6J3PknzqJ3DJEPGHS48Vecg8BVtv09e/g4uDPPoVDvs/SyhGmMOf
      Jo7iUhu19bxHLamXbx0esluJAWwM4CVwUpbnxMdrxW/9/H9ybPG3MXv/Xb7yFwoSj50AACAA
      SURBVH+eL/yZ/xStdROsGobBoFJDk0LwfDzG8zy2fR+n0sYEKvfmhW7Q/gkaQtcFe91u485p
      XaCzGXHhMosVg+/4MRLd4VuHU6zJHN82kW/8UboH30CoFC1Mgoc/xuPpFM8wUJ1/iqH1FDX8
      59HaoqO+hgyeUHg/xviUltC0osuPbps47nXD4e/8Q2bvffPMxz359V/hOz58hHf3Ia5tN7o8
      eVFwNJ/jJAl3hsNGdHYpy3RBdOzLQMexuVf8FjK0UM7bOF/7BchmqMF3Eb79b6OFyyJImumT
      cZ4zN+7w8J/+c/jBe1hdC9X9AsPZjHEU8cE8IO89YOhuY0Qhob6P4+6W3B+lQJRS89sdD0+H
      BPgcVc0yQsqy0+xqv5KbA8HJMhxrHy8Ez3/3t879+MOv/BYP7z7EqcaeCiGwpeQzDx+u5fsU
      WvN4MlnSDrru2HIKrKd/DZAY8m1EVvrocvr/YS6+wTvpXkn9bhm1FIJnuUsoPkVfeajJhPv9
      Pq5llSof1hgzHeObfWZqh6fjOYOOQddx6Ng2HXXI6A9+ARkfovx7bH3232GiyqGH/WpO2wbn
      QE1GO08DTKNksDh/yjFdzJeeu47XA5W4F7C/WNyoxQ9wFBtkuz9JvvdTaGevdY8gVCZBlh2b
      s2xU1XeAWVXpfv/oqNExmmUdzA9/EXf8N5gkCUE1EfJOv8+g02H49K8j49IFleFThvt/hy3f
      Z6fTwTbNzQnwMgiyjG4l1XEWtNb4e/fOfW1/7+4Sp6d9nbbLUyjFOAwJrpjY9ioI0pTn7g9g
      KEX/joGXHiHCRxS7P8zMvA/Mj/UsRFl2rJknKwoKy6LQmv0go7v3b2DZQ8T8RVzUqRvjixWN
      0jzCsqxGFXBzArwEZlXL5FmnQH3/nR/8Q3COxnTDdtj+vh885uqsLn4oFeKOWkK6Nw1JUZAV
      BRk2i7d+hsV3/Vkmwz/MwQn0DA2N1KNlGLw1GjHsdBrx3TTPeS/cIlDDhuo9qUZXKaXIHvw4
      WpYZM204pPe/1FDbkyTZnAAvi3EYMvC8UoL8lJNACEHv09/Bgz/0JR5/+W+fes3P/Ct/CqNT
      6tW3iXZtt6eNqycxvDoOqyzVwE8JMo+DICHKMgSlqodVDfFzTBMJ6Dyj6wveOYyI85w4D0nz
      5W8gznMeV2NPARZpyvtHR/Rcl7C4x/3v+Y9x46fMrHtkmY9dtUluuECvgEwpFpUW/1lQSvH5
      n/0zZMGc/d/+h2sf89ZP/BSf+uk/ea5FrbVekga5yQgLj1yJctypYXB3OMQQ4lhNxTIDrNmv
      YptfIs5zPJkQS/vY9VbnkCVFQRIEpZvTUSj3LkXqstUZYBZPKKw3CcMQEcexdpzVQvTNg9aa
      L//e713KaxlVNXGn2z0WtK2DFPDhr/1dPvi7f43pt76BMEy2PvfdvPUTP8Xoe76I0utVqWG5
      q2waxzy/5nn+88CUsuy0oxIxTtMlScp2z26SJFiOwx88e3au2Gsd9nouQtjcj38Z1fk+Cv/7
      CcOwJC9uDODVIYE7lRZnu8li7WNbCtTwgjjXCFutKD+3obXmeRAwPcfElaFnYwg4DK/nSeHb
      dinX0nLv6skv68iFQRDQ6XQ4mk5ZFAVBkhxT0XMtC0OIUxMD2x2P+92MRA1ZLAL6/X5JjX49
      H/PjAQVkQuC7LvMgWKJK1FwTp9YqXaEmtGcV1I9fB63LkaznWfwAtqExxfWkQQgheGvUxZ3/
      dZLeT6Awmunu6/ophCjFioMgwHcctisG58F83rBaTSn51O4uAJMw5NlkApWihABs06TnGLw5
      /0uI6Zxi70/iONtEUYRhGBsD+KiYVYK8z6OIN0ajJZEnrTVhNdWw3b1V31ej3b5YS6D36ymU
      cKLA7zrsL64v6U1ojRASbXQQ0iCJEjzPw7IssixrFDTgxQZimiZJkjTNLgA7vR6ebZf92lo3
      omFDz8OTEs/zCNMUyzCwDANdRIjxDIoFTvgbMPrpFxvQxgX66BhVWSEpBKPWrAEhBEVRNI0a
      Qgg6nU6z4KdxzDSKsE0TQwjCLGtSebJa/A8GAxZpeqNTnzWGnseO7zdDR+rvIooi9vf38X2f
      Yc9iHpa+v+/7DAaDZhM5C1proiha+1ihYvIswrB7IF7s+5sT4AIwjSLe2tpifz7HiGO6lXRJ
      3UhfTzbM85wkKXe9R5NJ47PGa6RKaj83zDL6rnujDcAxDLY7HbqOQ5qmdFcm6TiOw8OHD4mi
      CMeKMUfbzbwGOIGEqFOEjlHyhXpfveHUvdZQGoWUkmeLFMdyGYjlJb8phF0AFOWsr77r8nyx
      aMReV/160ywnx2R5fu50ZloUZZP7Rb/pS4IAPrG7y7DTwTRNiqIgDMNj/dSGYdDtdlFGOQPA
      tu1Gpn5tJ52aItJvH7s9DEMmkwki/iZZtM/7779ffudFwdPJ5FgAvTGAC8I0jpt5Yc/mc1hp
      XDekwJBirUbNaZjFcTMjeOR7lzLE7iJxp9/HMspMT5ZleJ6H67rM53PSc24C61pMlbFL4X7+
      2GO73S6u6yLNDobp8cYbbwAwrLrkZivDSDYGcIFYpCmeZZEUBU9nMwqtmc/nGNk+nQ/+GzpP
      /gdMHRKec5ZvjVop4r6/OKYMd53hmCY7XRuZP8eoUsW2bVPLQOZ5TlTRFk6D67pLSs8n9VxD
      eZp0u12UdR/D7jdDEDuOg2OaPJvNCCsindZ6YwAXiVwpDitfPcwynsxmZZ9u+LvI5Aky/BZW
      9LWG23IWbMOg5ziMqqF+Xz+ymmF4UAbK13UIBpS7P8JhkXaXZqVBuVB938eqJsCvSk+2UScQ
      sixjsVgwmUwIw5AkSc59khZFwcj3yYqCR0dHjc7qJgh+jUiLAun7FOZ3Y05/E4RN4X0G33I5
      XDON3ZQS1zTLVKjW5EqRJQmOaZajWLtddDFjkUnGUcb9vo0jU94Zr3nxq4ZSmFUauC701Wif
      fqZpYhhGk5dvZyS11k3/cztwrrNCWZY1dQSrNdhknVgBQMc06VgWQZaVswk2PcGvH3GWEdn3
      yD/xHwGCXAlcsxTJbWd/JPCw38eQkvfH5YpWupRR92yLcRgRZRnf4f4+vvMW08gj0xZRZrLl
      5xyFyfo3cEXQgDDNpSHctKb7rso7+n6p7blYLJqsWRiGuK57TJe1FharF36apiWvpyo8tuUR
      VzFQimAyYX8+Z/c2KsOZ1YTI8wyduwzM0xTftlHKoO5gFEKw1+3ydD5v5uEOqgmQizheEq3y
      bZt7/oJZbOFZkqn9AzyaJpgG7DkzEC4y/iqx/Z3s+BAXBrbUQMGH8+LKmuOFlIRp2hiA0ClC
      TVFGWbWtK+OCAnSGFi6u65JlGdPpFNu2T8z9t/X+oRQGsG2bxWJxLMW6inoE1iyOb+cJcN3U
      EHKleDyb4ZkmQ9fFq8r+dsVtr8Wv0jgmS2MsY7mSO49jvpaYKK0wBKRZ0jznq4cmllRI47tI
      8wxTwNDRuDJCph9gD97m3St0j4qK6ySEQGOB3Gnin2YBawU6b/pNa/Far6WDJHSIFi51zmaV
      Hl5j9aRYB1tKdj2P/TBkEkW3zwCuK6I8J1oscEyTLc97IVdoGDiGgePGYA6I0wTPskjzvNH3
      rE+zVYJbrlRp8JUr9e4YLENgmx3e6uxS0AFebmD2q8AxTRzTYBYvu2FGnjOfzxvR2vb8hCzL
      sG0brQVS+mUTOzRiX3VQLKVEVCcElMXEGkItEGiU7K1R7daV4XSWeiyyNOJOL+MgKhWlNwZw
      yUjynKctyQ4B7Pg+D9WvkfR+HM+y+Jz3TxjzRYIk4fk5OtDayKqOq6fGLg87UyzDatys14WB
      Z9I3I2bxi/fpWRZbAx9DT5hGkjiOy/x8ZQi11LxSiiiKlpSya6HgGoouQoGo5A5rbpUWHlop
      VJVOdVvtqkJohM5R6IZ6ARAnGUo5bNmSRVFsDOCqoYHnYUjs/ihv6jmLbERufB8mJRNSJKcH
      t6aU9D2HOCuWqstZoTDyZ3x26yFPA+e1Bsn785jnQtLuVcvznNkiYctPse0ReZ43NYDaoKMo
      IkkShoM+2nGaRRxXzNeaxtAWBU7T9FhKVWvVnBjtdKrWPrTksYqiQEoDy/bYsj06aboxgOuC
      eRzz1cRE6RlbnsfD3oQwHpz6HFMIurbJQ+8A4UR8M3hAUBnMlqeIjQccRDZB+voZoqupx7Qo
      mqVX7/BB1czT7Xab3b+c6XVEIYcYhsFkMsGyLLrdbrPwa7nzuh6wLtg9rTg2n8/pdDoNUa42
      wI63Eca6Vqh9/aMwxDd9tsXXGVtvHtP19C2LLc9DZRnKMAh5i1jlpNkMQZnpmCcmfStjkeRX
      MhdMSMmHiwW56tF3HXodC4OQo3k50jRJEgaDAUEQEEmPOJ5imgZ7w4xJ+EK7s3aXatRqDu0F
      XxPg6rnOdU2gHUcsFosmPVpfe9MTfF0hBLEqkEZG17K460VMs15ZU8gyBq6LY5qEWVYGlYBn
      mmVWSalyrBMQaZc0P15wuyzU7h1KsdeXxLmH45TFquFwSBzHzb+FEGU+P+th2+UUHoMISUpK
      yfisXSOzmtJTF8oAer0e8/kcx3GI43iJEep5HovFoln0jpyiRI9CbzrCri0OgpSx/AQ9K2ek
      f4PY/BGyDHYqxTMoA+j+6kws00AKRVYI8kwxME1meX6lM4ITSj99Ni+rtoZhYBspZqd875ZM
      MDyHnj1hlgxwnHLhZsoBHLRWjSvk+z7z+ZyiKCiKohxYYhsURZlCLYqiIdyV2VJBGL4Yli2E
      wMj3wbTIdWdjANcZhVJMkpSv2z9CFGegFNujUdkpJTW+7zalfyklpmnimDPM5F0y8wfK3bXT
      oQc8mc3KlKnWl64nOotj3s9N3tjqQj4mUSNEKzgVaASCceQTZQkp0HOcZpcPwxClFJ7nNfFA
      HVAD2IxJ5QjHcRpXyLIsTEIQRhNYF0U5JikyPotWGti4QDcCYTWbzBaCJI7p2Qe4z/43tD1i
      vvuniLMyzdjpdIjVEGF9sUwPKoUpQlypuet7OI7NZLagqAZnXCaCPOfdwzm73SFFEpNrh0Ua
      oLKMXHrM4smL1s80pVCKnuOQVFkfyzKxZEwQG0s1hSRJyK0ukDVs0SRJ6Ha7ZMJqegocx2Ey
      mdCvdFdrbAzghqCWTgGwF7+NyCeIfIKdfsCiuF8+psqdz+dzDKPa+bLyNsc28Y0pkelgWRaq
      KJhd8tCMtCh4PJ2Wp1DLAKdrpMyfBwEHQVDWSTodBpaJQGOaJlmWkSQJURQxGAya4Net+qjd
      agJnlmVNIS7LMgaDAVmWkaZp2SRzm9Shi/SQOz2XZ/PL3dkuC1lRIF2Xju+Tu19EBt9AWyMK
      7y2spMyEJEnS9Nm2+21t22YymbEwTZQqF/2o02E+mVyNytw5XTBd/REiRxcRRwsFhI1rVEvR
      1Lv8i8uLhiinlGK3H7PIRo2RNEWxOL49BiCtIdP4+VW/jdeGvW4X3yhlRDLrLt4bP4dGUhSa
      IJji+36zE7Zz3bUQbH30t4//oecxXumQui7oOjbb9pwPFi5aKSzTpttxGE9m7G75CKGYzE/n
      fdVu4TRzWMznDKvvwJVjYjW6XeK4QhjE2eXnuy8K1ilELscw2O0IRtnfotvtEgQBs0VEoSrR
      2Gq38zyvCYZrmKbZaBOtUiq2fZ873S5bnrck53IdkOQFczVAaY1tegihsY0Yx3FIcpNFJJd2
      fkMKHHP59PdciyiO+daHz5tWSK01id5qTpFbcwLcdJzG15FSkmsH7f0QURQ17k0QBGtFt84L
      rTXdKpuy5ft8OJ+T5Dn5ypzhq0BWFBwF5XcyjWMMXMIwRkrZzFc+LuezbOAd84iF6OP7Pnf6
      fdI0RUrZuE6TDRXiZiDLc4IgoigcXNdqgmHDMEiS5JUNoEZdGb3X75f59mp3PAxD5mdwkS4D
      8zSFPGfo+00QbLaGlQMUSlOoFwYhRNl81HEculWvBZUAVxzHJNV1b40LdJsxqLjxtSsDL0Sg
      2rpDr4LVuEBUfcaWYXCn22W308FfCTKvAvOi4HAyIQiCpu5xWj9wVhTsz0oKtRQCSyya1kxp
      GOxXmaeNAdwAzJIEw7aXfPssyxrf/zyNIKswhcKffgN//7dx0vHaJhMhBEPP426/f/W6REJg
      dTpNqrOmQGRZRp7nx4xBCtGMUapuWVLsq+VlNi7QDUBWFDxbLHhrNFqi/brnmFGwDm70DOfL
      fx7G7yIA03CwvvdPEH3nv4q6auf/FIRZxk512tUnYB0Daa2X06FaY5smQRTR63SIlUNN1zYN
      A8+yWGxcoJuDJM8JqiAOyspmEASN7ii8YEWeBlNonL//nyOqxQ8gigT5O/8LzpP1QzziPL/y
      oBjK4SR1ssC2bTzPa7SGVk+AJEnod7tYpsl8PidqfU/wIlzeGMANwmGV9SndH4Nh32+KXTXn
      /jS1NSEE1ux9ODw+u1igMd79W8dSpXGeN1Lk1wHrZgAYhkGWZQRBsLQBSClxbBvHcRjP5+RV
      Z1iapnQrucmNAdwgxHleCmNpTefoF+k++S/x5Ay7ig8cx8E0TeI4PjEzJLLgRH9eJMGSASit
      eTKdXhuFDaDM5lAZc8uBrwdsFEXBfD5vsj3wwhDCaqOQUtKtUskbA7hhOAwCur0uophBEeLa
      NH5wzYNxXZc0TYmiqLm9mTI5/CTaOkFu5M7nlwzn8XR6pTTqVfiWRb+KewwJFtPmvvl83uT4
      e71eUysAsEzBvUGK6zj0uh6+/eIU2RjADUOc54zDiOTOv0ny5s+Rmfca+m+7S6rkydsNBbj+
      k1s9ii/8DFqsTJ4cvkX6uX956bbrtPNDqZHUfI5CExXD5r5aR6hjHjYCWaZpEkURaaaYhB3S
      NEVr0ZCgBR+DLJBpGBhCXElb4OvC0+mUaWix1+/jiBcqa0II/OJr5OYDEtVFStnEBHXVVGtN
      9OmfxO2/gfHO34Rkjt77LtLP/iSZsVxPuG4GYLbGSq3ODqiNP5V7CFH2ELTvr92jsmBmskhj
      io8DFeJO18KTMd+8jvqZHwFhlvHe4SG73S4yTen1euWPLb0XO5wQeJ5HkiRNIwlUmpt734+8
      +wON2sIqcqUaAdnrAK01opJQAY4ZQC2WW8uq2K26SRiGeJ5Xxkd5zjiKmt6DW28AT2cJUkjK
      MRa3D8/ncx5WPHfbtonkJ5oFnVU9w+sUE+qFf1I1Nbkmqc8aQggKKemuGecVBAGjqkaitW4E
      dz15SCp2gGocq1I8nc+XPtetjwFUpbJ8ayEEspo800bdKlmLx64TmG3/vYrFNRzIfRgETS9B
      u3JdT5ipd/46C5aKHZQqjV8DzxaLY0Z96w3gtsMyDLoc0LMClFLEcdzQA2pJwrpXdnW3P2nx
      Z0XB/JJbJs+DQqmmFuKwj2nQ7Polz3/WsEWjKCKOU7IsL4dkCIFjHnd4NgZwCgQnL5Lrgru+
      xnv83+F9+D9iGappgKkLZoYB28ZXMGVJHWhnhFZdoHmS8HQ249tX1Sl2DkyiqJSN0bvkBc3Q
      Qa01SngvJr9UQW8Yho2S3LphIrc+BvgoeDgwkULz/uT1amt+FMTKRLtvguEjTQdDF82CyLKM
      KIyxzQGGZWPkpbam4ziNy6S1ZpEkjKOI5DVriF4ElNblEOyW4G29SaWF1cgnep63ZOiGYayt
      aWwM4BQchHW67foujMMw487DnyVJEkz9gh9fZ0O01oyTN3FkgWVZTZN4/bhZHLNfSRbeFERZ
      hl+5M7U4Vj1zDFiaK2AYBkmeczifrx1HuzGAUxBdsmrCq0AKgdaQphlSGsdctloiUErZjBtq
      Z4WiG1gfyasBGfWgjDwv/fy6JbTe+bXW9OwxTwN/7eKHjQHcePQr0adaAQGWm1y01nS7XdI0
      Jc9zfN9fohCfd8jcdcI4DLG1xq3Es1aFctudYrHeI85PJvNtguAbDsc0SdP0WFdX+0+dAu10
      Oo37o7UmzLJrme48C2mecxTHpaxJRXeuJ00eHh6WE+f5EK010yhamqy5io0B3HAYKy5PrQrR
      zvOnaUqapkuDIgzD4OiaSqKcB2GWYVTjlKSUjIxH9OP/h2HfKUV2ix0KpZoh4ydh4wLdcCil
      oMreWCLFf/yXkeFj8js/StD/Z1BKkec5w+GwzApVQyieVgoQNxWaUi1it9vFNjXO0S8jigXd
      7Q6y+0MgBB+eg826MYAbDss0CcKQOI55y/o6xvT3ADCf/B8o5zs4mJZdZFvWOzg6Y259D89m
      s1Jp4YZDVYrRhTLQve+H8B1S+5OEYcik6qA7CxsDuOEwqonrjuNA0JqPKywcr8sd12ISBITm
      57CkJE8U04o0dtOxSBK2fB9lmnwgfgQ5+CMUqWKaxOeei7YxgBuMrm2jK74/QNT7AuLuFBk/
      Jtv+wxTYCAG2ZfHuwQQpBHnVIHMbUGjNt46OPtI1NgZwgzH0vIYFClAoWIz+yDHiW8dx6Hse
      44ojv8ELbLJANxSGELhVtqe94OtJKu0cv9aa6Bb4/K8DmxPghqJe4MUaX7fm+odZRpLnRFl2
      YiX0446NAdxQaEp68DpFNygDxCfXSM5EAPcGHs8X6Wsf3P0y2LhANxSWlFB1P7VRKEWUpktD
      s68DpBB0jQDzmsmwb06AGwohBGGa4q9MTU/znCez2bVrAC205g+OJHDNDPOq38AGrwZTSuI1
      rY6OZWGv6XzaYD02BnBDEWcZfiWA1cYkDDcB70tgYwA3FF3bxqqIbjXSPCe4AT0M1wmbs/IG
      whSCUaeDhCbXr7TmcT0Me4NzY3MC3EDIVrNLHQMIoLcSEG9wNjYGcANRzs4t3Z+aBiGEYLvT
      KdOjG5wbm2/rBmLoeViGsVQEU1rzZDYj27hAL4WNAdxA1EMe2mNC06Jo9C43OD82BnADMY1j
      FDQDIJTWPL1GtIebhI0B3EAUSqFbgTCwNvsjgJ2Ox2dG+tb0AFw0NmnQGwhFWQgbuG4pfa4U
      Qin0SgAshCBIc4Tw0Pr6aX1eB2xOgBuKeSVyhWFgWBadNcOsldZEWcbzxWbxn4SNAdxQxEXB
      PEmgaogZuC7ea5jovk5Q9jbhdn+6W479xYI4yxCAVoqhZV14HeA6TYl5HdjEADcYSmueBwHj
      KEIKQfoaGk1unnDiy2FjALcAG/7Pq2PjAm3wscbGADb4WGNjABt8rLExgA0+1tgYwAYfa2wM
      YIOPNTYGsMHHGhsD2OBjjY0BbPCxxqYSfMthCEHHcRqtoHSjGbSEzQlwi+GYJp++cwe/mgy/
      WfzHsTkBbiFcy2LgeTimyTv7+2UH2VW/qWuKzQlwC2EZBn3P44PxmHyz+E/FxgBuGRzT5G6/
      j2Oa7PV6V/12rj02BnDLsN3t4lSdYTvdLvY10+O/btjEALcEI99Ha81Wp9PcluT5plfgDGxO
      gFuCME3xVrRBH43HqDMmpX/csTGAW4JkzWT0jRLQ2dgYwA2HKWWz0N2VyTB9zzv+hI8hTCnp
      tmQkAQwpeXNraxMD3GRIIfjMnTs8Ho9ZJEkT/Na47ZImZ6HvuvQrIeGO4zCLosYtHHgefc/b
      GMBNhCkluVI4pln+mL5Px3EYrOz4s/hmCGIZUtJzXSZnTLIXQrDV6SAoY55CKXKlMNYoYphS
      cncwWJqX1vc8PmkYPF8scKrbNwZwA2EaBrlSWIaBZRj4tr129u52t8v8mhtBvVAHnsfA8wjT
      lLwokFI2Ql+asr6RK0XfdZvnaq1RutQ9fTadNlMzR50OlmFgrDkBPdvm4XDYaKVuDOAGolCK
      nW6XUZXyrA1hFasxwXXA/cEAzYv4xBCimXPQc116rQV+FoQQGNVCvjccnvt57bkK1+8b2uBU
      SCHwbZtxGDLw/at+O+dGz3XZ7nTovsQCvwxsDOCGQWlNmKa8ubV15g4vhEAI0UioXyV2u138
      lUzMdcDGAC4JtmHQ8zxc0yz5+VnG48nklbQ3tdbEWYZjmpinUB0E5YlRXJEBCCGwqxhltUh3
      XbAxgEvCw9FoaQe0TZN5HLNIkiaArbM7J6HveURpSlYUPJ1OG9bnSZBS0nddxmdkV14HTCl5
      uLV1LP9+3bAxgEvCao4e4MFohKoyGWiNlJJxEHC4WBxL6wkhuFOxO5/NZiyShGez2ZnFrnXZ
      odcJyzD4xM5OOcTvBkyl+XhXSs4J5yNmU6QQ7M/na31xKQSmlJjVgtnudvnMnTtLO6djmry5
      tcVRECCE4M3tbT61u8udfv/U1y2UIlqhR7xubHU6OKZ5IxY/bAzgTJhS8vbeHjvdLoaU+LaN
      a5pr044nQWmNgHP74kII7g2HbHc6mFKy0+vRc13uDYdNYce1rDN3/zjLLt3/71+zLM9Z2LhA
      Z8C3bQRwp99nr9drcsiFUkzCENMwiNKUME2Jswyt9doOrCjL4CUWo2Oa3BsOuTMYvPJuehlM
      UNeyeDAcsj+fI2Cp8noTcLPe7WuGU2VofNtuFl3HcZqqYXvSoiEl290uAAPPa/z4KMv41sHB
      sWtHafpKC/mjuBKXNd3FtSze2t5G65s3jXJjABXuD4eMfP+Vf0ApBAiBa1mMOh0WcczA85hG
      EVlRoLQmKwqcSyKoaa0vxf+PswxNmXK9aYsfPuYG4Jhm2TZomqWrcwE/oCElvUqG5O5gwG6v
      R5AkZU78Et0DIURDBtufz1/badBxnBvdd/CxMgDftrnT7zckKseyPnKGZx36FdUWSoO4Kl6+
      qLJKfc/j6WRy4ezQke9zr0Usu4n42BjAg+GQ4UdwcW4yLMPgja0tplHE4/H4wmRSompC5U3G
      xyINOvR9+p73sVz8NYQQDH2fh1tbF3I917KWGvBvKm79CdB1HB7c8GP6ItF3XYaexySKXvka
      nmXxyd3dG1PsOg23+gSQQuBY1mbxtyCE4P5odGYV+STYhsGb29u3YvHDLTsBar65EIJxEJDk
      OfcGg6t+W9cONeViFscvlSrd7nYZ+f5LVcGvO0Qcx9q55oy980BrzdHRtOC8vwAAAHhJREFU
      0dJufxMLM5eJOMt4Z3//XEHxbq/HXq93677PW3UCrP44t+3Humi4lsWn79whSlPmccy0igtM
      KdG8qCRLIdjpdm/l93mrDGCDl4djmjimycDz6DgOTlUUzIqCRZIQpSnmCQ3mtwG3ygUaj8dX
      /TY2uGH4/wHy8l3MeN7PXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World new cases' width='192'>
      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
      B5VZ8u7JsMcwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
